// 力扣（LeetCode）：https://leetcode-cn.com/problems/kth-largest-element-in-an-array

// 在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。

// 示例 1:
// 输入: [3,2,1,5,6,4] 和 k = 2
// 输出: 5

// 示例 2:
// 输入: [3,2,3,1,2,4,5,5,6] 和 k = 4
// 输出: 4


// 方法一：暴力破解
var findKthLargest = function(nums, k) {
  nums.sort((a, b) => b - a)
  return nums[k-1]
};

// 方法二：维护一个固定数量的堆
// 我们也可以通过构造一个前 k 个最大元素小顶堆来解决，小顶堆上的任意节点值都必须小于等于其左右子节点值，即堆顶是最小值。
// 所以我们可以从数组中取出 k 个元素构造一个小顶堆，然后将其余元素与小顶堆对比，如果大于堆顶则替换堆顶，然后堆化，所有元素遍历完成后，堆中的堆顶即为第 k 个最大值

// 方法三：快速选择优化算法
// 先随便选择参照元素，比如第一个，二分之后，将参照元素的下标与 k 进行比较，取其中半边继续同样的操作
