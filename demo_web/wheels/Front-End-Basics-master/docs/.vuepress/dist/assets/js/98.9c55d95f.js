(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{556:function(v,_,t){"use strict";t.r(_);var a=t(45),e=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"css-基础概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-基础概念"}},[v._v("#")]),v._v(" CSS 基础概念")]),v._v(" "),t("h2",{attrs:{id:"基本发展史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本发展史"}},[v._v("#")]),v._v(" 基本发展史")]),v._v(" "),t("ul",[t("li",[v._v("CSS1：解决网页排版布局和装饰问题，是第一个有“层叠（cascading）”概念的语言")]),v._v(" "),t("li",[v._v("CSS2：表现和内容分离")]),v._v(" "),t("li",[v._v("CSS2.1：对 CSS2 的修正、扩展，代替 CSS2")]),v._v(" "),t("li",[v._v("CSS3：规范模块化发展，样式丰富、酷炫，提高网站的可维护性以及性能速度")])]),v._v(" "),t("p",[v._v("CSS3 的模块化发展是一种组织方式，旨在使 CSS 更加灵活、可扩展、并易于维护。在 CSS3 之前，CSS 规范是作为一个大的单一文档发布的。随着 Web 技术的发展和需求的增加，CSS3 采用了模块化方法，将不同的功能划分为独立的模块。这样，每个模块可以单独开发和更新，而不影响其他模块。这也使得浏览器开发商可以选择性地实现某些模块，而不是整个 CSS 规范。")]),v._v(" "),t("h2",{attrs:{id:"层叠样式表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#层叠样式表"}},[v._v("#")]),v._v(" 层叠样式表")]),v._v(" "),t("p",[v._v("CSS - Cascading Style Sheets")]),v._v(" "),t("p",[v._v("style sheets 样式表，是规则声明的集合，集合中重复使用相同的规则声明就会产生冲突，cascading 层叠就是解决冲突的策略。")]),v._v(" "),t("p",[v._v("决定规则声明生效（或者说样式生效）的层叠三大规则：1、样式表来源 > 2、选择器优先级 > 3、源码位置")]),v._v(" "),t("p",[v._v("如果通过样式表来源就能确定哪个规则生效，就不需要再看选择器和源码位置了。")]),v._v(" "),t("h3",{attrs:{id:"_1、样式表来源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、样式表来源"}},[v._v("#")]),v._v(" 1、样式表来源")]),v._v(" "),t("p",[v._v("用户代理样式表（浏览器内置默认样式）< 用户样式表（很少有这个设置）< 作者样式表（开发者写的样式）< 作者样式表中 !important < 用户样式表中的 !important < 用户代理样式表中的 !important")]),v._v(" "),t("h3",{attrs:{id:"_2、选择器优先级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、选择器优先级"}},[v._v("#")]),v._v(" 2、选择器优先级")]),v._v(" "),t("p",[v._v("内联 > id > class = attribute = pseudo-class > type = pseudo-element")]),v._v(" "),t("p",[v._v("需要注意一些新的选择器，:is() :not() :has() 本身不计入优先级，以参数中最高的优先级为准，:where() 优先级是 0")]),v._v(" "),t("h3",{attrs:{id:"_3、源码位置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、源码位置"}},[v._v("#")]),v._v(" 3、源码位置")]),v._v(" "),t("p",[v._v("谁最后声明的谁生效")]),v._v(" "),t("ul",[t("li",[v._v("对于 @import 的样式，按照 @import 的顺序")]),v._v(" "),t("li",[v._v("对于 link 引入和 style 标签内的样式，根据在 document 中的顺序决定")])]),v._v(" "),t("h3",{attrs:{id:"基于层叠概念引申的-css-代码好的实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于层叠概念引申的-css-代码好的实践"}},[v._v("#")]),v._v(" 基于层叠概念引申的 CSS 代码好的实践")]),v._v(" "),t("p",[v._v("基于灵活性、可扩展性和可维护性考虑：")]),v._v(" "),t("ol",[t("li",[v._v("选择器尽量少用 id")]),v._v(" "),t("li",[v._v("尽量不要用 !important")]),v._v(" "),t("li",[v._v("自己的样式加载放到引用库样式的后面")])]),v._v(" "),t("h2",{attrs:{id:"全局关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局关键字"}},[v._v("#")]),v._v(" 全局关键字")]),v._v(" "),t("p",[t("code",[v._v("inherit")]),v._v("、"),t("code",[v._v("initial")]),v._v("、"),t("code",[v._v("unset")]),v._v(" 和 "),t("code",[v._v("revert")]),v._v(" 都是 CSS 全局关键字，指的是所有的 CSS 属性都可以使用这几个关键字作为属性值。")]),v._v(" "),t("h3",{attrs:{id:"inherit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#inherit"}},[v._v("#")]),v._v(" inherit")]),v._v(" "),t("p",[v._v("inherit 关键字可以让元素的属性继承父元素。从 IE8 开始支持。")]),v._v(" "),t("h3",{attrs:{id:"initial-关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initial-关键字"}},[v._v("#")]),v._v(" initial 关键字")]),v._v(" "),t("p",[v._v("initial 关键字可以让元素的属性改为初始值，例如 "),t("code",[v._v("display:initial;")]),v._v(" 就会初始为 "),t("code",[v._v("inline")]),v._v("，"),t("code",[v._v("font-size:initial;")]),v._v(" 就会初始为 "),t("code",[v._v("medium")]),v._v("。")]),v._v(" "),t("p",[v._v("实际用途：需要重置某些 CSS 样式，但是不知道默认初始值是什么的时候，可以设置 "),t("code",[v._v("initial")])]),v._v(" "),t("p",[v._v("CSS "),t("code",[v._v("initial")]),v._v(" 关键字将属性的初始值（默认值）应用于元素。它可以应用于任何 CSS 属性，包括 "),t("code",[v._v("all")]),v._v("，"),t("code",[v._v("initial")]),v._v(" 可用于将所有 CSS 属性恢复到其初始状态。")]),v._v(" "),t("p",[t("strong",[v._v("需要注意有一个误区："),t("code",[v._v("initial")]),v._v(" 关键字代表的是 CSS 属性的初始值，而不是浏览器设置的元素的初始值。如果想要重置为浏览器设置的元素的初始值，，应该使用全局关键字 "),t("code",[v._v("revert")])])]),v._v(" "),t("h4",{attrs:{id:"css-属性的初始值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-属性的初始值"}},[v._v("#")]),v._v(" CSS 属性的初始值")]),v._v(" "),t("p",[v._v("CSS 属性的初始值就是默认值，初始值的使用取决于属性是否被继承。")]),v._v(" "),t("p",[v._v("在 CSS 中，每个 CSS 属性定义的概述都指出了这个属性是默认继承的还是默认不继承的。这决定了当你没有为元素的属性指定值时该如何计算值。")]),v._v(" "),t("h3",{attrs:{id:"unset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unset"}},[v._v("#")]),v._v(" unset")]),v._v(" "),t("p",[v._v("unset 关键字表示不固定值，如果是具有继承属性的 CSS 属性，如 "),t("code",[v._v("color")]),v._v("，则使用继承值 "),t("code",[v._v("inherit")]),v._v("，如果是不能继承的 CSS 属性，如 "),t("code",[v._v("background-color")]),v._v("，则使用初始值 "),t("code",[v._v("initial")]),v._v("。")]),v._v(" "),t("p",[v._v("它可以应用于任何 CSS 属性，包括 CSS 简写属性 "),t("code",[v._v("all")]),v._v("，个人认为 "),t("code",[v._v("all: unset;")]),v._v(" 可以方便快捷的重置某个选择器设置的不清楚来源的样式（例如第三方库的样式）。")]),v._v(" "),t("h3",{attrs:{id:"revert"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#revert"}},[v._v("#")]),v._v(" revert")]),v._v(" "),t("p",[v._v("revert 关键字可以让元素的样式还原成浏览器的内置的样式，就是还原。")]),v._v(" "),t("h2",{attrs:{id:"继承属性和非继承属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承属性和非继承属性"}},[v._v("#")]),v._v(" 继承属性和非继承属性")]),v._v(" "),t("h5",{attrs:{id:"继承属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承属性"}},[v._v("#")]),v._v(" 继承属性")]),v._v(" "),t("p",[v._v("对于继承属性，初始值只能被用于没有指定值的"),t("strong",[v._v("根元素")]),v._v("上。")]),v._v(" "),t("p",[v._v("没有指定值时，则取父元素的同属性计算值。")]),v._v(" "),t("p",[t("strong",[v._v("注意：在继承属性上避免使用 "),t("code",[v._v("initial")]),v._v("关键字，如果想重置继承属性的默认值，可以使用 "),t("code",[v._v("inherit")]),v._v(","),t("code",[v._v("unset")]),v._v(","),t("code",[v._v("revert")]),v._v(" 关键字代替。")])]),v._v(" "),t("p",[v._v("继承属性主要与文本格式和列表格式有关。以下是一些常见的继承属性：")]),v._v(" "),t("ol",[t("li",[t("p",[t("strong",[v._v("文本相关属性")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("color")])]),v._v(" "),t("li",[t("code",[v._v("font-family")])]),v._v(" "),t("li",[t("code",[v._v("font-size")])]),v._v(" "),t("li",[t("code",[v._v("font-style")])]),v._v(" "),t("li",[t("code",[v._v("font-variant")]),v._v("（用于设置文本的小型大写字母样式。）")]),v._v(" "),t("li",[t("code",[v._v("font-weight")])]),v._v(" "),t("li",[t("code",[v._v("line-height")])]),v._v(" "),t("li",[t("code",[v._v("text-align")])]),v._v(" "),t("li",[t("code",[v._v("text-indent")])]),v._v(" "),t("li",[t("code",[v._v("text-transform")]),v._v("（控制文本的大小写转换）")]),v._v(" "),t("li",[t("code",[v._v("letter-spacing")])]),v._v(" "),t("li",[t("code",[v._v("white-space")]),v._v("（控制元素中的空白（如空格和换行符）的处理方式。）")]),v._v(" "),t("li",[t("code",[v._v("word-spacing")])])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("列表相关属性")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("list-style")])]),v._v(" "),t("li",[t("code",[v._v("list-style-type")])]),v._v(" "),t("li",[t("code",[v._v("list-style-position")])]),v._v(" "),t("li",[t("code",[v._v("list-style-image")])])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("其他")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("visibility")]),v._v("（不同于 "),t("code",[v._v("display")]),v._v("，"),t("code",[v._v("visibility")]),v._v(" 是继承的）")]),v._v(" "),t("li",[t("code",[v._v("cursor")])]),v._v(" "),t("li",[t("code",[v._v("quotes")])])])])]),v._v(" "),t("h5",{attrs:{id:"非继承属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非继承属性"}},[v._v("#")]),v._v(" 非继承属性")]),v._v(" "),t("p",[v._v("非继承属性，初始值可以被用于"),t("strong",[v._v("任意")]),v._v("没有指定值的元素上。")]),v._v(" "),t("p",[v._v("当元素的一个非继承属性没有指定值时，则取属性的初始值。")]),v._v(" "),t("p",[v._v("非继承属性通常涉及布局和盒模型等。以下是一些常见的非继承属性：")]),v._v(" "),t("ol",[t("li",[t("p",[t("strong",[v._v("盒模型相关属性")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("width")])]),v._v(" "),t("li",[t("code",[v._v("height")])]),v._v(" "),t("li",[t("code",[v._v("margin")])]),v._v(" "),t("li",[t("code",[v._v("padding")])]),v._v(" "),t("li",[t("code",[v._v("border")])]),v._v(" "),t("li",[t("code",[v._v("box-sizing")])])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("背景和颜色")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("background")])]),v._v(" "),t("li",[t("code",[v._v("background-color")])]),v._v(" "),t("li",[t("code",[v._v("background-image")])]),v._v(" "),t("li",[t("code",[v._v("background-repeat")])]),v._v(" "),t("li",[t("code",[v._v("background-position")])]),v._v(" "),t("li",[t("code",[v._v("background-size")])]),v._v(" "),t("li",[t("code",[v._v("background-attachment")])])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("布局相关属性")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("display")])]),v._v(" "),t("li",[t("code",[v._v("position")])]),v._v(" "),t("li",[t("code",[v._v("top")])]),v._v(" "),t("li",[t("code",[v._v("right")])]),v._v(" "),t("li",[t("code",[v._v("bottom")])]),v._v(" "),t("li",[t("code",[v._v("left")])]),v._v(" "),t("li",[t("code",[v._v("float")])]),v._v(" "),t("li",[t("code",[v._v("clear")])]),v._v(" "),t("li",[t("code",[v._v("overflow")])]),v._v(" "),t("li",[t("code",[v._v("z-index")])])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("其他")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("border-collapse")])]),v._v(" "),t("li",[t("code",[v._v("border-spacing")])]),v._v(" "),t("li",[t("code",[v._v("table-layout")])]),v._v(" "),t("li",[t("code",[v._v("vertical-align")])]),v._v(" "),t("li",[t("code",[v._v("text-decoration")])])])])]),v._v(" "),t("p",[t("strong",[v._v("虽然是非继承属性，但是允许使用 "),t("code",[v._v("inherit")]),v._v(" 关键字显式的声明继承性，它对继承和非继承属性都生效。可以使用 all 简写属性，一次控制所有属性的继承。")])]),v._v(" "),t("h3",{attrs:{id:"all"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[v._v("#")]),v._v(" all")]),v._v(" "),t("p",[v._v("CSS 的 all 简写属性可以将除却 "),t("code",[v._v("unicode-bidi")]),v._v(" 与 "),t("code",[v._v("direction")]),v._v(" 之外的所有属性重设至其初始值或继承值。")]),v._v(" "),t("h4",{attrs:{id:"all-unset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#all-unset"}},[v._v("#")]),v._v(" all:unset")]),v._v(" "),t("p",[v._v("设置为 unset ，会有两种情况：")]),v._v(" "),t("ol",[t("li",[v._v("如果元素的属性的值是可继承的，则改变该元素所有属性的值为父元素的属性值")]),v._v(" "),t("li",[v._v("如果元素的属性的值是不可继承的，则改变为初始值，例如 display 属性是不可继承的，就会改变为初始值 inline。")])]),v._v(" "),t("h4",{attrs:{id:"all-initial"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#all-initial"}},[v._v("#")]),v._v(" all:initial")]),v._v(" "),t("p",[v._v("设置为 initial，表示该元素的所有属性改变为初始值")]),v._v(" "),t("h4",{attrs:{id:"all-inherit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#all-inherit"}},[v._v("#")]),v._v(" all:inherit")]),v._v(" "),t("p",[v._v("设置为 inherit，表示该元素的所有属性的值改变为父元素的属性值。")]),v._v(" "),t("h4",{attrs:{id:"all-revert"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#all-revert"}},[v._v("#")]),v._v(" all:revert")]),v._v(" "),t("p",[v._v("谁知为 revert，表示该元素的用户设置的样式还原为浏览器的内置样式。"),t("strong",[v._v("注意：前面三个是所有样式，这个实际表现就只是把用户设置的样式还原。")])]),v._v(" "),t("h2",{attrs:{id:"css-的值和单位"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-的值和单位"}},[v._v("#")]),v._v(" CSS 的值和单位")]),v._v(" "),t("h3",{attrs:{id:"值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#值"}},[v._v("#")]),v._v(" 值")]),v._v(" "),t("ul",[t("li",[v._v("文字类：例如 initial 关键字、颜色、位置等")]),v._v(" "),t("li",[v._v("数值类：例如 z-index:1 这种数值，或者带有单位的数值、百分比等")]),v._v(" "),t("li",[v._v("函数生成：例如 calc()、min()、max()等")])]),v._v(" "),t("h3",{attrs:{id:"单位"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单位"}},[v._v("#")]),v._v(" 单位")]),v._v(" "),t("ul",[t("li",[v._v("长度：\n"),t("ul",[t("li",[v._v("绝对长度：px pt cm in")]),v._v(" "),t("li",[v._v("相对响度：em rem ex rex.. vw vh wmin vmax...")])])]),v._v(" "),t("li",[v._v("角度：deg grad turn rad")]),v._v(" "),t("li",[v._v("时间：s ms")]),v._v(" "),t("li",[v._v("分辨率：dpi dpcm dppx")])]),v._v(" "),t("h2",{attrs:{id:"简写属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简写属性"}},[v._v("#")]),v._v(" 简写属性")]),v._v(" "),t("p",[v._v("简写属性是可以同时设置好几个 CSS 属性值的 CSS 属性。目的在于将那些关于同一主题的常见属性的定义集中在一起，编写更简洁、更具可读性的样式表，节省时间和精力。")]),v._v(" "),t("p",[v._v("简写的属性包括：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("background")])]),v._v(" "),t("li",[t("code",[v._v("font")])]),v._v(" "),t("li",[t("code",[v._v("border")])]),v._v(" "),t("li",[t("code",[v._v("margin")])]),v._v(" "),t("li",[t("code",[v._v("padding")])]),v._v(" "),t("li",[t("code",[v._v("all")])])]),v._v(" "),t("h3",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[v._v("#")]),v._v(" 注意")]),v._v(" "),t("ol",[t("li",[v._v("简写属性中没有指定的值会被设置为它的默认值，所以这就意味着它将会覆盖之前设置的值，例如下面的代码：")])]),v._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("/* background 的 color 虽然设置为 red，但是因为 background 简写属性没有指定 background-color 的值，所以就是默认的 transparent，red 就会被覆盖*/")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("background-color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" red"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("background")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token url"}},[t("span",{pre:!0,attrs:{class:"token function"}},[v._v("url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("images/bg.gif"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")])]),v._v(" no-repeat top right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[v._v("关键字 inherit 只可以应用于单独属性，如果应用于一个简写属性，则必须整体应用，这意味着让一个属性的值显式使用继承值的唯一方法就是使用值是 inherit 的普通属性。")])]),v._v(" "),t("li",[t("p",[v._v("简写属性不试图强制它们替代属性的值的特定顺序。不过这只适用于这些属性使用不同类型的值时，因为这个时候顺序并不重要。但当几个属性可以设置相同的值的时候，就需要按照特定规则，例如 "),t("code",[v._v("margin: 10px;")]),v._v(" 和 "),t("code",[v._v("margin: 10px 20px;")])])])]),v._v(" "),t("h2",{attrs:{id:"推荐文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推荐文章"}},[v._v("#")]),v._v(" 推荐文章")]),v._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/ZY3qyPeiljd6lbRzanqleQ",target:"_blank",rel:"noopener noreferrer"}},[v._v("图解 CSS：揭开 CSS 的面纱"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=e.exports}}]);