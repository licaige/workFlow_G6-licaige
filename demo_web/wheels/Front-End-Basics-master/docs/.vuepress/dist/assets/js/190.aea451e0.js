(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{678:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nginx-基础配置和语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-基础配置和语法"}},[t._v("#")]),t._v(" Nginx 基础配置和语法")]),t._v(" "),a("h2",{attrs:{id:"全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[t._v("#")]),t._v(" 全局变量")]),t._v(" "),a("p",[t._v("Nginx 有一些常用的全局变量，可以在配置的任何位置使用他们。列举一些比较常见的：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("变量")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("HTTP 相关的变量")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$host")])]),t._v(" "),a("td",[t._v("请求行中的 Host，如果有 Host 请求头，则用其值替换掉请求行中的主机名，如果请求中没有 Host 行和 Host 请求头，则等于请求匹配的 server 名称（处理请求 server 的 server_name 指令的值），值为小写，不包含端口")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$uri")])]),t._v(" "),a("td",[t._v("请求中的当前 URI（不同于 URL ，不包括 "),a("code",[t._v("?")]),t._v(" 后面的请求参数，参数位于 "),a("code",[t._v("$args")]),t._v("），不同于浏览器传递 "),a("code",[t._v("$request_uri")]),t._v(" 的值，它可以通过内部重定向，或者使用 index 指令进行修改，不包括协议和主机名，例如 /abc/ef.html")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$document_uri")])]),t._v(" "),a("td",[t._v("当前请求在 root 指令中指定的值，与 "),a("code",[t._v("$uri")]),t._v(" 完全相同，历史问题存在")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request_uri")])]),t._v(" "),a("td",[t._v("完整的原始请求 URL（包括 URI 和完整的参数），它无法修改，请查看 "),a("code",[t._v("$uri")]),t._v(" 更改或重写 URL")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$scheme")])]),t._v(" "),a("td",[t._v("请求模式，http 或 https")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request")])]),t._v(" "),a("td",[t._v("原始的 url 请求，含有方法与协议版本，例如 GET /?a=1&b=22 HTTP/1.1")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request_method")])]),t._v(" "),a("td",[t._v("客户端请求类型，如 GET、POST")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request_length")])]),t._v(" "),a("td",[t._v("所有请求内容的大小，包括请求行、头部、包体等")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request_body")])]),t._v(" "),a("td",[t._v("请求中的包体，这个变量当且仅当使用反向代理，且设定用内存暂存包体时才有效")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request_body_file")])]),t._v(" "),a("td",[t._v("临时存放请求包体的文件，如果包体非常小则不会存文件，可以通过 client_body_in_file_only 强制所有包体存入文件，且可决定是否删除")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$remote_user")])]),t._v(" "),a("td",[t._v("由 HTTP Basic Authentication 协议传入的用户名")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$args")])]),t._v(" "),a("td",[t._v("请求中的参数，这个变量可以被修改")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$arg_PARAMETER")])]),t._v(" "),a("td",[t._v("GET 请求中变量名 PARAMETER 参数的值，"),a("code",[t._v("/test?name=abc")]),t._v("，"),a("code",[t._v("$arg_name")]),t._v(" 为 abc")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$is_args")])]),t._v(" "),a("td",[t._v('如果请求有参数则为 "?"，否则为空字符串""')])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$query_string")])]),t._v(" "),a("td",[t._v("与 "),a("code",[t._v("$args")]),t._v(" 相同")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$content_length")])]),t._v(" "),a("td",[t._v("请求头中标识包体长度的 Content-Length 字段")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$content_type")])]),t._v(" "),a("td",[t._v("请求头中标识包体类型的 Content-Type 字段")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$http_HEADER")])]),t._v(" "),a("td",[t._v("HTTP 请求头中的内容，HEADER 为 HTTP 请求中的内容转为小写，- 改为 _ （破折号变为下划线），例如 "),a("code",[t._v("$http_user_agent")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$http_user_agent")])]),t._v(" "),a("td",[t._v("客户端 agent 信息")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$http_cookie")])]),t._v(" "),a("td",[t._v("客户端 cookie 信息")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$cookie_COOKIE")])]),t._v(" "),a("td",[t._v("跟 "),a("code",[t._v("$arg_PARAMETER")]),t._v(" 类似，获取某个 cookie 值")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("TCP 连接相关的变量")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$binary_remote_addr")])]),t._v(" "),a("td",[t._v("客户端地址的整型格式，对于 IPv4 是 4 字节，对于 IPv6 是 16 字节")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$remote_addr")])]),t._v(" "),a("td",[t._v("客户端的 IP 地址")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$remote_port")])]),t._v(" "),a("td",[t._v("客户端的端口")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$connection")])]),t._v(" "),a("td",[t._v("递增的连接序号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$connection_requests")])]),t._v(" "),a("td",[t._v("当前连接上执行过的请求数，对 keepalive 连接有意义")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$proxy_protocol_addr")])]),t._v(" "),a("td",[t._v("若使用了 proxy_protocol 协议则返回协议中的地址（原始用户的地址），否则返回空")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$proxy_protocol_port")])]),t._v(" "),a("td",[t._v("若使用了 proxy_protocol 协议则返回协议中的端口（原始用户的端口），否则返回空")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$server_addr")])]),t._v(" "),a("td",[t._v("服务器端地址")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$server_port")])]),t._v(" "),a("td",[t._v("服务器端端口")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$server_protocol")])]),t._v(" "),a("td",[t._v("服务器端协议，例如 HTTP/1.1")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$TCP_INFO")])]),t._v(" "),a("td",[t._v("tcp 内核层参数，包括 "),a("code",[t._v("$tcpinfo_rtt")]),t._v("、"),a("code",[t._v("$tcpinfo_rttvar")]),t._v("、"),a("code",[t._v("$tcpinfo_snd_cwnd")]),t._v("、"),a("code",[t._v("$tcpinfo_rcv_space")])])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("Nginx 处理请求过程中产生的变量")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request_time")])]),t._v(" "),a("td",[t._v("请求处理到现在的耗时，单位为秒，精确到毫秒")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$server_name")])]),t._v(" "),a("td",[t._v("匹配上请求的 server_name 值")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$https")])]),t._v(" "),a("td",[t._v("如果开启了 TLS/SSL，则返回 on，否则返回空")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request_completion")])]),t._v(" "),a("td",[t._v("若请求处理完则返回 OK，否则返回空")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request_id")])]),t._v(" "),a("td",[t._v("以 16 进制输出的请求标识 id，该 id 共含有 16 个字节，是随机生成的")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request_filename")])]),t._v(" "),a("td",[t._v("待访问文件的完整路径")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$document_root")])]),t._v(" "),a("td",[t._v("由 URI 和 root/alias 规则生成的文件夹路径")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$realpath_root")])]),t._v(" "),a("td",[t._v("将 document_root 中的软链接等换成真实路径")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$limit_rate")])]),t._v(" "),a("td",[t._v("返回客户端响应时的速度上线，单位为每秒字节数。可以通过 "),a("code",[t._v("set")]),t._v(" 指令修改对请求产生效果")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("发送 HTTP 响应时相关的变量")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$sent_http_HEADER")])]),t._v(" "),a("td",[t._v("HTTP 响应头中的内容，HEADER 为 HTTP 响应中的内容转为小写，- 改为 _ （破折号变为下划线），例如 "),a("code",[t._v("$sent_http_cache_control")]),t._v(" 、 "),a("code",[t._v("sent_http_content_type")]),t._v(" 等")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$status")])]),t._v(" "),a("td",[t._v("HTTP 响应状态")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$body_bytes_sent")])]),t._v(" "),a("td",[t._v("传送页面的字节数，即响应中 body 包体的长度")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$bytes_sent")])]),t._v(" "),a("td",[t._v("全部 http 响应的长度")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$sent_trailer_名字")])]),t._v(" "),a("td",[t._v("把响应结尾内容里的值返回")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("Nginx 系统变量")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$time_local")])]),t._v(" "),a("td",[t._v("以本地时间标准输出的当前时间")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$time_iso8601")])]),t._v(" "),a("td",[t._v("使用 ISO 8601 标准输出的当前时间")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$nginx_version")])]),t._v(" "),a("td",[t._v("当前运行的 Nginx 版本号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$pid")])]),t._v(" "),a("td",[t._v("所属 worker 进程的 id")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$pipe")])]),t._v(" "),a("td",[t._v("使用了管道则返回 p，否则返回 "),a("code",[t._v(".")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$hostname")])]),t._v(" "),a("td",[t._v("所在服务器的主机名，与 hostname 命令输出一致")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$msec")])]),t._v(" "),a("td",[t._v("1970 年 1 月 1 日到现在的时间，单位为秒，小数点后精确到毫秒")])])])]),t._v(" "),a("h3",{attrs:{id:"nginx-如何设置变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-如何设置变量"}},[t._v("#")]),t._v(" Nginx 如何设置变量")]),t._v(" "),a("p",[t._v("Nginx 的配置文件使用的是一门微型的编程语言。既然是编程语言，一般也就少不了 “变量” 这种东西，但是在 Nginx 配置中，变量只能存放一种类型的值，那就是字符串。")]),t._v(" "),a("p",[t._v("可以用 "),a("code",[t._v("set")]),t._v(" 配置指令动态指定变量的值，Nginx 变量名前面有一个 "),a("code",[t._v("$")]),t._v(" 符号，并且所有的 Nginx 变量在 Nginx 配置文件中引用时都必须带上 "),a("code",[t._v("$")]),t._v(" 前缀")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$limit_rate")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#限制对客户端的响应传输速率。")]),t._v("\n")])])]),a("p",[t._v("在引用变量时，需要注意引用的变量名之后紧跟着字符时（比如后跟字母、数以及下划线），就需要使用特别的语法来消除歧义：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$temp")]),t._v(" hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$temp world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("close "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${hello}world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 紧跟字符时的用法")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("另外需要注意的是，如果想输出 "),a("code",[t._v("$")]),t._v(" 符号本身，可以这样做：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("geo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dollar")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$temp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${temp}world：$dollar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面用到了标准模块 ngx_geo 提供的配置指令 geo 来为变量 "),a("code",[t._v("${dollar}")]),t._v(' 赋予字符串 "$"，这样，这里返回的就是 "hello world：$"')]),t._v(" "),a("h3",{attrs:{id:"nginx-变量的实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-变量的实现原理"}},[t._v("#")]),t._v(" Nginx 变量的实现原理")]),t._v(" "),a("p",[t._v("Nginx 的变量对应的模块可以分为：变量的提供模块和变量的使用模块")]),t._v(" "),a("ul",[a("li",[t._v("Nginx 启动时，提供变量的模块可以在 preconfiguration 中定义新的变量，包括定义好"),a("strong",[t._v("变量名")]),t._v("和"),a("strong",[t._v("解析出变量的方法")])]),t._v(" "),a("li",[t._v("HTTP 头部读取完毕后，使用变量的模块，比如 http 的 access 日志，解析 nginx.conf 时定义变量使用方式，处理请求时，会通过变量名去对应的解析出变量的方法中求得变量值")])]),t._v(" "),a("h3",{attrs:{id:"map-模块通过映射新变量提供更多的可能性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-模块通过映射新变量提供更多的可能性"}},[t._v("#")]),t._v(" map 模块通过映射新变量提供更多的可能性")]),t._v(" "),a("p",[t._v("map 模块可以基于已有变量，使用类似"),a("code",[t._v("switch {case: ... default ...}")]),t._v(" 的语法创建新变量，为其他基于变量值实现功能的模块提供更多的可能性。ngx_http_map_module 是默认编译进项目的。")]),t._v(" "),a("h4",{attrs:{id:"map-指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-指令"}},[t._v("#")]),t._v(" map 指令")]),t._v(" "),a("p",[t._v("语法 "),a("code",[t._v("map string $variable {...}")]),t._v("，只能在 http 上下文中使用。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("string")]),t._v(" 已有变量，可以是字符串、一个或者多个变量、变量和字符串的组合")]),t._v(" "),a("li",[a("code",[t._v("$variable")]),t._v(" 生成的新的变量")]),t._v(" "),a("li",[t._v("case 规则（优先级从高到低）\n"),a("ul",[a("li",[t._v("字符串严格匹配")]),t._v(" "),a("li",[t._v("使用 hostnames 指令，可以对域名使用前缀 "),a("code",[t._v("*")]),t._v(" 泛域名匹配")]),t._v(" "),a("li",[t._v("使用 hostnames 指令，可以对域名使用后缀 "),a("code",[t._v("*")]),t._v(" 泛域名匹配")]),t._v(" "),a("li",[a("code",[t._v("~")]),t._v(" 和 "),a("code",[t._v("~*")]),t._v(" 正则表达式匹配，后者忽略大小写")])])]),t._v(" "),a("li",[t._v("default 规则\n"),a("ul",[a("li",[t._v("没有匹配到任何规则时，使用 default")]),t._v(" "),a("li",[t._v("缺失 default 时，返回空字符串给新变量，即新变量为 false")])])]),t._v(" "),a("li",[t._v("其他情况\n"),a("ul",[a("li",[t._v("使用 include 语法提升可读性")]),t._v(" "),a("li",[t._v("使用 volatile 禁止变量值缓存")])])])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  hostnames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  default "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),t._v("\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x\\w"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tech "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("例如请求头 "),a("code",[t._v("Host: map.xu.org.cn")]),t._v(" 泛域名匹配优先于正则匹配，所以 "),a("code",[t._v("$name")]),t._v(" 是 2。")]),t._v(" "),a("h3",{attrs:{id:"split-client-模块对少量用户指定变量-可以实现-ab-测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split-client-模块对少量用户指定变量-可以实现-ab-测试"}},[t._v("#")]),t._v(" split_client 模块对少量用户指定变量（可以实现 AB 测试）")]),t._v(" "),a("p",[t._v("模块默认编译进 Nginx，基于已有变量（已有变量，可以是字符串、一个或者多个变量、变量和字符串的组合）创建新变量。")]),t._v(" "),a("p",[t._v("过程：")]),t._v(" "),a("ul",[a("li",[t._v("对已有变量的值执行 MurmurHash2 算法得到 32 位整型哈希数字，记为 hash")]),t._v(" "),a("li",[t._v("32 位无符号整型的最大数字 2^32-1，记为 max")]),t._v(" "),a("li",[t._v("hash/max 可以得到百分比 percent")]),t._v(" "),a("li",[t._v("配置指令中指示了各个百分比构成的范围，如 0-1%,1%-5%等，及范围对应的值")]),t._v(" "),a("li",[t._v("当 percent 落在哪个范围里，新变量的值就对应着其后的参数。")])]),t._v(" "),a("p",[t._v("case 规则")]),t._v(" "),a("ul",[a("li",[t._v("xx.xx% 支持小数点后 2 位，所有项的百分比相加不能超过 100%")]),t._v(" "),a("li",[a("code",[t._v("*")]),t._v(" 由它匹配剩余的百分比（100%减去以上所有项相加的百分比）")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("split_clients")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${http_testcli}"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$variant")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.51")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("one"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"geo-模块根据-ip-地址范围生成新变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geo-模块根据-ip-地址范围生成新变量"}},[t._v("#")]),t._v(" geo 模块根据 IP 地址范围生成新变量")]),t._v(" "),a("p",[t._v("语法 "),a("code",[t._v("geo [$address] $variable {...}")]),t._v("，根据 IP 地址创建新变量，默认编译进 Nginx。只能在 HTTP 上下文中使用。")]),t._v(" "),a("ul",[a("li",[t._v("如果 geo 指令后不输入 $address，那么默认使用 $remote_addr 变量作为 IP 地址")]),t._v(" "),a("li",[t._v("{} 内的指令匹配：优先最长匹配\n"),a("ul",[a("li",[t._v("通过 IP 地址及子网掩码的方式，定义 IP 范围，当 IP 地址在范围内时新变量使用其后的参数值")]),t._v(" "),a("li",[t._v("default 指定了当以上范围都未匹配上时，新变量的默认值")]),t._v(" "),a("li",[t._v("proxy 指定新地址，此时 remote_addr 的值为 X-Forwarded-For 头部值中最后一个 IP 地址")]),t._v(" "),a("li",[t._v("include 优化可读性")]),t._v(" "),a("li",[t._v("delete 删除指定网络")])])])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("geo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$country")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  default ZZ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include conf/geo.conf;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("116.62")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".160")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".193")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" US"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(" RU"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.1")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" RU"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),t._v(" UK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"nginx-配置文件的基本结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置文件的基本结构"}},[t._v("#")]),t._v(" Nginx 配置文件的基本结构")]),t._v(" "),a("p",[t._v("拿我们之前编译安装的 Nginx 主配置文件 "),a("code",[t._v("/usr/local/nginx/conf/nginx.conf")]),t._v(" 来看，"),a("code",[t._v("nginx.conf")]),t._v("的结构图大体如下：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("main        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 的全局配置，对全局生效")]),t._v("\n├── events  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置影响 nginx 服务器或与用户的网络连接")]),t._v("\n├── http    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置，可以嵌套多个 server")]),t._v("\n│   ├── upstream "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置后端服务器具体地址，负载均衡配置不可或缺的部分")]),t._v("\n│   ├── server   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置虚拟主机的相关参数，如域名、IP、端口等，一个 http 块中可以有多个 server 块")]),t._v("\n│   ├── server\n│   │   ├── location  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置请求的路由，以及各种页面的处理情况")]),t._v("\n│   │   ├── location  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server 块可以包含多个 location 块，location 指令用于匹配 uri")]),t._v("\n│   │   └── "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n│   └── "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n└── "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("h2",{attrs:{id:"nginx-配置文件的语法规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置文件的语法规则"}},[t._v("#")]),t._v(" Nginx 配置文件的语法规则")]),t._v(" "),a("p",[a("strong",[t._v("Nginx 是由一些模块组成，一般在配置文件中使用一些具体的指令来控制。")]),t._v(" 指令被分为简单指令（简称指令）和块级指令（简称指令块）。")]),t._v(" "),a("h3",{attrs:{id:"简单指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单指令"}},[t._v("#")]),t._v(" 简单指令")]),t._v(" "),a("p",[t._v("简单指令是由名字和参数组成，中间用空格分开，并以分号结尾。")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#简单指令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"块级指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块级指令"}},[t._v("#")]),t._v(" 块级指令")]),t._v(" "),a("p",[t._v("块级指令跟简单指令有类似的结构，但是末尾不是分号而是用大括号（ "),a("code",[t._v("{}")]),t._v(" ）包裹的额外指令集。如果一个块级指令的大括号中有其他指令，则它被叫做一个上下文（比如: events、http、server 和 location）。")]),t._v(" "),a("p",[t._v("在配置文件中，没有放在任何上下文中的指令都处在主上下文中。"),a("code",[t._v("events")]),t._v(" 和 "),a("code",[t._v("http")]),t._v(" 的指令是放在主上下文中，"),a("code",[t._v("server")]),t._v(" 放在 "),a("code",[t._v("http")]),t._v(" 中，"),a("code",[t._v("location")]),t._v(" 放在 "),a("code",[t._v("server")]),t._v(" 中。")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#块级指令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" doc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chenfangxu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v(" logs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("doc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chenfangxu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("access"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" \\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("php$ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fastcgi_pass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1025")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"语法规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法规则"}},[t._v("#")]),t._v(" 语法规则")]),t._v(" "),a("ul",[a("li",[t._v("配置文件由指令与指令块构成")]),t._v(" "),a("li",[t._v("每条指令以分号（"),a("code",[t._v(";")]),t._v("）结尾，指令与参数间以空格符号分隔")]),t._v(" "),a("li",[t._v("指令块以大括号（"),a("code",[t._v("{}")]),t._v("）将多条指令组织在一起")]),t._v(" "),a("li",[a("code",[t._v("include")]),t._v(" 语句允许组合多个配置文件以提升可维护性")]),t._v(" "),a("li",[t._v("通过 "),a("code",[t._v("#")]),t._v(" 符号添加注释，提高可维护性")]),t._v(" "),a("li",[t._v("通过 "),a("code",[t._v("$")]),t._v(" 符号使用变量")]),t._v(" "),a("li",[t._v("部分指令的参数支持正则表达式，例如常用的 location 指令")])]),t._v(" "),a("h2",{attrs:{id:"location-指令规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#location-指令规则"}},[t._v("#")]),t._v(" location 指令规则")]),t._v(" "),a("p",[t._v("location 指令用于仅匹配 uri，忽略参数，可以使用合法的字符串或者正则表达式")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 空"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" uri "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ……\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("指令后面：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("=")]),t._v("：精确匹配，用于不含正则表达式的 uri 前，如果匹配成功，不再进行后续的查找")]),t._v(" "),a("li",[a("code",[t._v("^~")]),t._v("：前缀匹配，用于不含正则表达式的 uri 前，表示如果该符号后面的字符是最佳匹配。采用该规则，不再进行后续的正则查找。跟 "),a("code",[t._v("=")]),t._v(" 的区别是，不需要 uri 一模一样，只需要开头和 uri 匹配即可。")]),t._v(" "),a("li",[a("code",[t._v("~")]),t._v("：正则匹配，表示用该符号后面的正则 uri 去匹配路径，区分大小写")]),t._v(" "),a("li",[a("code",[t._v("~*")]),t._v("：正则匹配，表示用该符号后面的正则 uri 去匹配路径，不区分大小写。")]),t._v(" "),a("li",[a("code",[t._v("空")]),t._v("：普通匹配（最长字符匹配），匹配以 uri 开头的字符串，只能是普通字符串。例如，"),a("code",[t._v("location /")]),t._v(" 是通用匹配，任何请求都会匹配到。另外普通匹配与 location 顺序无关，是按照匹配的长短来确定匹配结果。")])]),t._v(" "),a("h3",{attrs:{id:"优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[t._v("#")]),t._v(" 优先级")]),t._v(" "),a("p",[a("code",[t._v("location =")]),t._v(" > "),a("code",[t._v("location 完整路径")]),t._v("（还会去匹配正则） > "),a("code",[t._v("location ^~ 路径")]),t._v(" > "),a("code",[t._v("location ~,~* 正则顺序")]),t._v(" > "),a("code",[t._v("location 部分起始路径")]),t._v(" > "),a("code",[t._v("location /")])]),t._v(" "),a("p",[t._v("即：精确匹配 > 最长字符串匹配，完全匹配（还会去匹配正则） > 前缀匹配 > 正则匹配 > 普通匹配(最长字符串匹配，部分匹配) > 通用匹配")]),t._v(" "),a("h4",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意：")]),t._v(" "),a("ul",[a("li",[t._v("在所有匹配成功的 uri 中，选取匹配度最长的 uri 字符地址。正则除外，正则匹配是按照先后顺序确定匹配结果")]),t._v(" "),a("li",[t._v("正则匹配成功之后停止匹配，普通匹配成功后还会接着匹配正则。举个例子：")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `location 完整路径` 虽然比 `location ^~ 路径` 优先级高，但还是会去匹配正则")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果正则匹配成功，采用正则匹配结果。如果没有匹配到 `location 完整路径`，`location ^~ 路径` 就比 `location ~,~* 正则顺序` 优先级高了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ab "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("baidu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("abc "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("baidu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ab "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("baidu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问 http://docs.chenfangxu.com/ab 会跳到百度搜索关键词 C")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问 http://docs.chenfangxu.com/abc 会跳到百度搜索关键词 A")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果 uri 包含正则表达式，则必须有 "),a("code",[t._v("~")]),t._v(" 或 "),a("code",[t._v("~*")]),t._v(" 标志，否则正则代码只能作为普通字符使用，例如 "),a("code",[t._v("location = /demo$")]),t._v(" ，其中的 "),a("code",[t._v("$")]),t._v(" 并不代表正则模式结束，而是一个实实在在的 "),a("code",[t._v("$")]),t._v(" 字符，是 url 的一部分。")]),t._v(" "),a("li",[t._v("针对 "),a("code",[t._v("~")]),t._v(" 和 "),a("code",[t._v("~*")]),t._v(" 匹配标识符，可以在前面加上 "),a("code",[t._v("!")]),t._v(" 来取反："),a("code",[t._v("!~")]),t._v("：表示正则不匹配，区分大小写， "),a("code",[t._v("!~*")]),t._v("：表示正则不匹配，不区分大小写")])]),t._v(" "),a("h3",{attrs:{id:"根据优先级来模拟-nginx-location-的匹配过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据优先级来模拟-nginx-location-的匹配过程"}},[t._v("#")]),t._v(" 根据优先级来模拟 Nginx location 的匹配过程")]),t._v(" "),a("ol",[a("li",[t._v("Nginx 首先根据 url 检查最长匹配前缀字符串，即会判断 "),a("code",[t._v("=")]),t._v("、"),a("code",[t._v("^~")]),t._v("、"),a("code",[t._v("空")]),t._v(" 修饰符定义的内容")])]),t._v(" "),a("ul",[a("li",[t._v("如果匹配到最长匹配前缀字符串（即最长的 uri）\n"),a("ul",[a("li",[t._v("如果最长匹配前缀字符串被 "),a("code",[t._v("=")]),t._v(" 修饰符匹配，则"),a("strong",[t._v("立即响应")])]),t._v(" "),a("li",[t._v("如果没有被 "),a("code",[t._v("=")]),t._v(" 修饰符匹配，则执行第 2 步判断。")])])]),t._v(" "),a("li",[t._v("如果没有匹配到最长匹配前缀字符串")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Nginx 继续检查最长匹配前缀字符串，即判断 "),a("code",[t._v("^~")]),t._v("、"),a("code",[t._v("空")]),t._v(" 修饰符定义的内容")])]),t._v(" "),a("ul",[a("li",[t._v("如果最长匹配前缀字符串被 "),a("code",[t._v("^~")]),t._v(" 修饰符匹配，则"),a("strong",[t._v("立即响应")])]),t._v(" "),a("li",[t._v("如果被 "),a("code",[t._v("空")]),t._v(" 修饰符匹配，则"),a("strong",[t._v("将改匹配保存起来")]),t._v("（不管是普通匹配的完全匹配还是部分匹配），并执行第 3 步判断。")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Nginx 找到 nginx.conf 中定义的所有正则匹配（"),a("code",[t._v("~")]),t._v("和"),a("code",[t._v("~*")]),t._v("），并按顺序进行匹配。")])]),t._v(" "),a("ul",[a("li",[t._v("如果有任何正则表达式匹配成功，则"),a("strong",[t._v("立即响应")])]),t._v(" "),a("li",[t._v("如果没有任何正则匹配成功，则响应第 2 步中"),a("strong",[t._v("存储的 "),a("code",[t._v("空")]),t._v(" 修饰符匹配结果")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"loaction-其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loaction-其他"}},[t._v("#")]),t._v(" loaction 其他")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("@")]),t._v(" 开头的是用于内部跳转的命名 location。")]),t._v(" "),a("li",[t._v("merge_slashes 可以合并 url 中的重复斜杠，除了 base64 编码的格式，其他情况都需要打开")])]),t._v(" "),a("h2",{attrs:{id:"典型配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#典型配置"}},[t._v("#")]),t._v(" 典型配置")]),t._v(" "),a("h3",{attrs:{id:"源码编译安装到-usr-local-nginx-的-nginx-典型配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码编译安装到-usr-local-nginx-的-nginx-典型配置"}},[t._v("#")]),t._v(" 源码编译安装到 "),a("code",[t._v("/usr/local/nginx")]),t._v(" 的 Nginx 典型配置")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#user  nobody;  # 定义 Nginx 运行的用户和用户组，默认由 nobody 账号运行，可以不进行设置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 进程数，一般设置为同 CPU 核数一样")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 的错误日志存放目录，后面可以跟日志类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局错误日志定义类型包括：[ debug | info | notice | warn | error | crit ]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  notice;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  info;")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pid        logs/nginx.pid; # Nginx 服务启动的 pid 存储位置")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ];")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# epoll模型是Linux 2.6以上版本内核中的高性能网络I/O模型，如果跑在FreeBSD上面，就用kqueue模型。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#use epoll;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个进程允许最大并发数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置使用最频繁的部分，代理，缓存，日志定义等绝大多数功能和第三方模块的配置都在这里设置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# include 是个主模块指令，可以将配置文件拆分并引用，减少主配置文件的复杂度")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("       mime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("types")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件扩展名与类型映射表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v("  application"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("octet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("stream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认文件类型")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置日志格式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                  '$status $body_bytes_sent \"$http_referer\" '")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#                  \'"$http_user_agent" "$http_x_forwarded_for"\';')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/access.log  main; # Nginx 访问日志存放位置")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v("        on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启高效传输模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tcp_nopush     on; # 减少网络报文段的数量，防止网络阻塞")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#autoindex on;  # 开启目录列表访问，适合下载服务器")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keepalive_timeout  0;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保持连接的时间，也叫超时时间，单位秒，默认为0")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip  on;")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加载子配置项")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置虚拟主机的相关参数，如域名、IP、端口等")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置监听的端口")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置的域名，可以有多个，用空格隔开")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;  # 默认编码")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/host.access.log  main;  # 定义本虚拟机的访问日志")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网站根目录")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认首页文件")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_page  404              /404.html;")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# redirect server error pages to the static page /50x.html")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认50x对应的访问页面")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy the PHP scripts to Apache listening on 127.0.0.1:80")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location ~ \\.php$ {")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    proxy_pass   http://127.0.0.1;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location ~ \\.php$ {")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    root           html;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    fastcgi_pass   127.0.0.1:9000;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    fastcgi_index  index.php;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    include        fastcgi_params;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# deny access to .htaccess files, if Apache's document root")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# concurs with nginx's one")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location ~ /\\.ht {")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    deny  all;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# another virtual host using mix of IP-, name-, and port-based configuration")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server {")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    listen       8000;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    listen       somename:8080;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server_name  somename  alias  another.alias;")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    location / {")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        root   html;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        index  index.html index.htm;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    }")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTPS server")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server {")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    listen       443 ssl;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server_name  localhost;")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_certificate      cert.pem;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_certificate_key  cert.key;")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_session_cache    shared:SSL:1m;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_session_timeout  5m;")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_ciphers  HIGH:!aNULL:!MD5;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_prefer_server_ciphers  on;")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    location / {")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        root   html;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        index  index.html index.htm;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    }")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"yum-安装的-nginx-典型配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yum-安装的-nginx-典型配置"}},[t._v("#")]),t._v(" yum 安装的 Nginx 典型配置")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v("  nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行用户")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 进程数，一般设置为同 CPU 核数一样")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_log")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("var"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log warn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 的错误日志存放目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pid")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("var"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 服务启动时的 pid 存放位置")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" epoll"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用epoll的I/O模型(如果你不知道Nginx该使用哪种轮询方法，会自动选择一个最适合你操作系统的)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个进程允许最大并发数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置使用最频繁的部分，代理、缓存、日志定义等绝大多数功能和第三方模块的配置都在这里设置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置日志模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("log_format")]),t._v("  main  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n                      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$status $body_bytes_sent \"$http_referer\" '")]),t._v("\n                      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"$http_user_agent" "$http_x_forwarded_for"\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("var"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("access"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log  main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx访问日志存放位置")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v("            on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启高效传输模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tcp_nopush")]),t._v("          on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 减少网络报文段的数量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tcp_nodelay")]),t._v("         on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保持连接的时间，也叫超时时间，单位秒")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("types_hash_max_size")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("types")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件扩展名与类型映射表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v("        application"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("octet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("stream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认文件类型")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加载子配置项")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置监听的端口")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置的域名")]),t._v("\n\n    \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("share"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网站根目录")]),t._v("\n    \t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认首页文件")]),t._v("\n    \t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deny")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".22")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 禁止访问的ip地址，可以为all")]),t._v("\n    \t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".33")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".44")]),t._v("； "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许访问的ip地址，可以为all")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认50x对应的访问页面")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同上")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"配置中常用指令详细说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置中常用指令详细说明"}},[t._v("#")]),t._v(" 配置中常用指令详细说明")]),t._v(" "),a("h3",{attrs:{id:"指令介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令介绍"}},[t._v("#")]),t._v(" 指令介绍")]),t._v(" "),a("p",[t._v("指令是有 Context 的，不同的指令可以应用的 Context 可能也不同。")]),t._v(" "),a("ul",[a("li",[t._v("值指令，主要是存储配置项的值，值指令可以合并，继承规则是向上覆盖，即子配置不存在时，直接使用父配置，子配置存在时，直接覆盖父配置。例如 "),a("code",[t._v("root")]),t._v("、"),a("code",[t._v("access_log")]),t._v("、"),a("code",[t._v("gzip")]),t._v(" 等指令")]),t._v(" "),a("li",[t._v("动作类指令，主要是指定行为，此类指令不可以合并，例如 "),a("code",[t._v("rewrite")]),t._v("、"),a("code",[t._v("proxy_pass")]),t._v(" 等指令，这些指令生效阶段一般是 "),a("code",[t._v("server_rewrite 阶段")]),t._v("、"),a("code",[t._v("rewrite 阶段")]),t._v("、"),a("code",[t._v("content 阶段")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"main-全局配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-全局配置"}},[t._v("#")]),t._v(" main 全局配置")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("worker_processes 1;")])])]),t._v(" "),a("p",[t._v("定义在配置文件顶级 main 部分，worker 角色的工作进程个数。master 进程是接受并分配请求给 worker 处理。这个数值可以简单设置为 CPU 的核数 "),a("code",[t._v("grep ^processor /proc/cpuinfo | wc -l")]),t._v("，也可以是 auto 值。如果开启了 ssl 和 gzip，更应该设置成与逻辑 CPU 数量一样甚至为 2 倍，可以减少 I/O 操作。如果 Nginx 服务器还有其它服务，可以考虑适当减少。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("worker_cpu_affinity 0001 0010 0100 1000;")])])]),t._v(" "),a("p",[t._v("定义在 main 部分。在高并发情况下，通过设置 cpu 粘性来降低由于多 CPU 核切换造成的寄存器等现场重建带来的性能损耗。如 worker_cpu_affinity 0001 0010 0100 1000; （四核）。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("use epoll;")]),t._v("\n写在 events 部分。在 Linux 操作系统下，nginx 默认使用 epoll 事件模型，得益于此，nginx 在 Linux 操作系统下效率相当高。同时 Nginx 在 OpenBSD 或 FreeBSD 操作系统上采用类似于 epoll 的高效事件模型 kqueue。在操作系统不支持这些高效模型时才使用 select。")])]),t._v(" "),a("h3",{attrs:{id:"http-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-配置"}},[t._v("#")]),t._v(" http 配置")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("sendfile on;")])]),t._v(" "),a("p",[t._v("开启高效传输模式，sendfile 指令指定 nginx 是否调用 sendfile 函数来输出文件，减少用户空间到内核空间的上下文切换。对于普通应用设为 on，如果用来进行下载等应用磁盘 IO 重负载应用，可设置为 off，以平衡磁盘与网络 I/O 处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成 off。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("client_max_body_size 10m;")])]),t._v(" "),a("p",[t._v("允许客户端请求的最大单文件字节数。如果有上传较大文件，请设置它的限制值。")])])]),t._v(" "),a("h3",{attrs:{id:"server-虚拟主机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#server-虚拟主机"}},[t._v("#")]),t._v(" server 虚拟主机")]),t._v(" "),a("p",[t._v("http 服务上支持若干虚拟主机。每个虚拟主机对应一个 server 配置项，配置项里面包含该虚拟主机相关的配置。在提供 mail 服务的代理时，也可以建立若干 server，每个 server 通过监听地址或端口来区分。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("listen 80;")])]),t._v(" "),a("p",[t._v("监听端口和地址，默认 80，小于 1024 的要以 root 启动，可以只指定端口或者指定地址和端口，例如"),a("code",[t._v("listen *:80;")]),t._v("、"),a("code",[t._v("listen 127.0.0.1:80")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("server_name localhost;")])]),t._v(" "),a("p",[t._v("服务器名，可以设置多个，第一个名字将成为主服务器名称（主域名），服务器名称可以使用 "),a("code",[t._v("*")]),t._v(" 代替名称的第一部分或者最后一部分；也可以通过正则匹配（加 "),a("code",[t._v("~")]),t._v(" 前缀），还可以使用正则表达式进行捕获。")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"server-name-扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#server-name-扩展"}},[t._v("#")]),t._v(" server_name 扩展")]),t._v(" "),a("p",[t._v("1、"),a("code",[t._v("server_name")]),t._v(" 第一个名字作为主域名可以配合 "),a("code",[t._v("server_name_in_redirect")]),t._v("，可以让多个子域名有重定向时，重定向到主域名下。")]),t._v(" "),a("p",[t._v("2、 "),a("code",[t._v("serve_name")]),t._v(" 可以使用正则表达式的小括号 "),a("code",[t._v("()")]),t._v(" 创建变量，并且可以使用尖括号 "),a("code",[t._v("?<>")]),t._v(" 来命名变量。")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用正则，并且创建变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("www\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sites"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建命名变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("www\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("domain"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sites"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$domain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("3、 "),a("code",[t._v(".example.com")]),t._v(" 可以匹配到 "),a("code",[t._v("example.com")]),t._v(" "),a("code",[t._v("*.example.com")])]),t._v(" "),a("p",[t._v("4、 "),a("code",[t._v("_")]),t._v(" 匹配所有域名")]),t._v(" "),a("p",[t._v("5、 在某个 server 块下的 server_name 使用 "),a("code",[t._v('""')]),t._v(" 匹配没有传递 Host 头部的请求")]),t._v(" "),a("h4",{attrs:{id:"多个-server-块的匹配顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个-server-块的匹配顺序"}},[t._v("#")]),t._v(" 多个 server 块的匹配顺序")]),t._v(" "),a("ol",[a("li",[t._v("优先精确匹配，跟 server 块在 nginx.conf 中的顺序无关")]),t._v(" "),a("li",[t._v("其次优先匹配 "),a("code",[t._v("*")]),t._v(" 在前的泛域名")]),t._v(" "),a("li",[t._v("其次优先匹配 "),a("code",[t._v("*")]),t._v(" 在后的泛域名")]),t._v(" "),a("li",[t._v("其次匹配到正则表达式，匹配顺序是按 nginx.conf 文件中的出现顺序匹配正则表达式域名")]),t._v(" "),a("li",[t._v("最后会匹配到 default server，default server 又分为两种情况，第一种是匹配第一个 server 块，另一种情况是如果 "),a("code",[t._v("listen")]),t._v(" 指令后面有 "),a("code",[t._v("default")]),t._v(" 时，所在的 server 块就是 default server。")])]),t._v(" "),a("h3",{attrs:{id:"localtion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#localtion"}},[t._v("#")]),t._v(" localtion")]),t._v(" "),a("h4",{attrs:{id:"访问控制-allow-deny"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问控制-allow-deny"}},[t._v("#")]),t._v(" 访问控制 allow/deny")]),t._v(" "),a("p",[t._v("Nginx 的访问控制模块默认就会安装，而且写法简单，可以分别有多个 allow/deny ，允许或禁止某个 ip 或 ip 段访问，依次满足任何一个规则就停止往下匹配。")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.29")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".73")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deny")]),t._v(" all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("我们也常用 httpd-devel 工具的 htpasswd 来为访问的路径设置登录密码：（"),a("em",[t._v("此处笔者没有验证")]),t._v("）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("htpasswd -c htpasswd admin\nNew passwd:\nRe-type new password:\nAdding password for user admin\n\nhtpasswd htpasswd admin    //修改admin密码\nhtpasswd htpasswd sean    //多添加一个认证用户\n")])])]),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#  auth_basic   "NginxStatus";')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  auth_basic_user_file   /usr/local/nginx-1.6/htpasswd;")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.29")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".73")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deny")]),t._v(" all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这样就生成了默认使用 CRYPT 加密的密码文件。打开上面 nginx-status 的两行注释，重启 Nginx 生效。")]),t._v(" "),a("h4",{attrs:{id:"列出目录-autoindex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列出目录-autoindex"}},[t._v("#")]),t._v(" 列出目录 autoindex")]),t._v(" "),a("p",[t._v("Nginx 默认是不允许列出整个目录的。如果需要此功能，打开 nginx.conf 文件，在 location、server 或 http 部分加入 "),a("code",[t._v("autoindex on;")]),t._v("，另外两个参数最好也加进去：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("autoindex_exact_size off;")])]),t._v(" "),a("p",[t._v("默认为 on，显示出文件的确切大小，单位是 bytes。改为 off 后，显示出文件的大概大小，单位是 KB、MB 或者 GB。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("autoindex_localtime on;")])]),t._v(" "),a("p",[t._v("默认为 off，显示的文件时间为 GMT 时间。改为 on 后，显示的文件时间为文件的服务器时间。")])])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("images "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("var"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("default"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("autoindex")]),t._v(" on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("autoindex_exact_size")]),t._v(" off"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("autoindex_localtime")]),t._v(" on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"nginx-的-if-判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-的-if-判断"}},[t._v("#")]),t._v(" Nginx 的 if 判断")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("if (condition) {\n  ……\n}\n")])])]),a("p",[t._v("rewrite 模块提供的，可以用在 server,location 上下文中，如果条件 condition 为真，则执行大括号内的指令；遵循值指令的继承规则")]),t._v(" "),a("h3",{attrs:{id:"括号中的表达式语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#括号中的表达式语法"}},[t._v("#")]),t._v(" 括号中的表达式语法")]),t._v(" "),a("h4",{attrs:{id:"普通语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#普通语法"}},[t._v("#")]),t._v(" 普通语法")]),t._v(" "),a("ul",[a("li",[t._v("当表达式只是一个变量时，如果值为空或任何以 0 开头的字符串都会当做 "),a("code",[t._v("false")])]),t._v(" "),a("li",[t._v("直接比较变量和内容时，使用 = 或 !=")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" POST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("405")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"正则语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则语法"}},[t._v("#")]),t._v(" 正则语法")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("~")]),t._v(" 和 "),a("code",[t._v("!~")]),t._v(" 判断是否匹配正则表达式，区分大小写")]),t._v(" "),a("li",[a("code",[t._v("~*")]),t._v(" 和 "),a("code",[t._v("!~*")]),t._v(" 判断是否匹配正则表达式，不区分大小写")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果参数中有 id=1 则 301 到指定域名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$args")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com permanent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v(" aaa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果参数中有 name=xxx 则使用该值")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$args")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\w"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 301 跳转")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html permanent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /test.html => /aaa.html")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /test.html?name=bbb => /bbb.html")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"文件及目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件及目录"}},[t._v("#")]),t._v(" 文件及目录")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-f")]),t._v(" 和 "),a("code",[t._v("!-f")]),t._v(" 判断是否存在文件")]),t._v(" "),a("li",[a("code",[t._v("-d")]),t._v(" 和 "),a("code",[t._v("!-d")]),t._v(" 判断是否存在目录")]),t._v(" "),a("li",[a("code",[t._v("-e")]),t._v(" 和 "),a("code",[t._v("!-e")]),t._v(" 判断是否存在文件、目录、软连接")]),t._v(" "),a("li",[a("code",[t._v("-x")]),t._v(" 和 "),a("code",[t._v("!-x")]),t._v(" 判断文件是否可执行")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_filename")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"if-指令出现问题的原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-指令出现问题的原因"}},[t._v("#")]),t._v(" if 指令出现问题的原因")]),t._v(" "),a("ul",[a("li",[t._v("if 指令在 rewrite 阶段执行")]),t._v(" "),a("li",[t._v("if {} 块中的配置，会在 if 条件为真时，替换当前请求的配置\n"),a("ul",[a("li",[t._v("if {} 同样向上继承父配置")]),t._v(" "),a("li",[t._v("当在 rewrite 阶段顺序执行时，每次 if 为真都会替换当前请求的配置（连续的 if 后面的会覆盖前面的）")])])]),t._v(" "),a("li",[t._v("if {} 中的配置，会影响 rewrite 阶段之后的阶段执行")])]),t._v(" "),a("h2",{attrs:{id:"error-page-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#error-page-配置"}},[t._v("#")]),t._v(" error_page 配置")]),t._v(" "),a("p",[t._v("error_page 指令的语法是 "),a("code",[t._v("error_page code... [=[response]] uri;")]),t._v("，可以使用的上下文是 "),a("code",[t._v("http,server,location,if in location")]),t._v("。")]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("error_page 404 /404.html;")])]),t._v(" "),a("li",[a("code",[t._v("error_page 500 502 503 504 /50x.html;")])]),t._v(" "),a("li",[a("code",[t._v("error_page 404 =200 /empty.gif")]),t._v(" 把状态码 404 替换成 200 返回给客户端")]),t._v(" "),a("li",[a("code",[t._v("error_page 404 = /404.php;")])]),t._v(" "),a("li",[a("code",[t._v("error_page 403 http://example.com/forbidden.html")])]),t._v(" "),a("li",[a("code",[t._v("error_page 404 =301 http://example.com/notfound.html")])]),t._v(" "),a("li",[t._v("根据 @ 符号进行内部跳转")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @fallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" @fallback "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("backend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"nginx-中的配置单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-中的配置单位"}},[t._v("#")]),t._v(" Nginx 中的配置单位")]),t._v(" "),a("h3",{attrs:{id:"时间单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间单位"}},[t._v("#")]),t._v(" 时间单位")]),t._v(" "),a("ul",[a("li",[t._v("ms：毫秒（milliseconds）")]),t._v(" "),a("li",[t._v("s：秒（seconds）")]),t._v(" "),a("li",[t._v("m：分钟（minutes）")]),t._v(" "),a("li",[t._v("h：小时（hours）")]),t._v(" "),a("li",[t._v("d：天（days）")]),t._v(" "),a("li",[t._v("w：周（weeks）")]),t._v(" "),a("li",[t._v("M：月（months，30 days）")]),t._v(" "),a("li",[t._v("y：年（years，365 days）")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("expires")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"空间单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空间单位"}},[t._v("#")]),t._v(" 空间单位")]),t._v(" "),a("p",[t._v("默认为字节（bytes）")]),t._v(" "),a("ul",[a("li",[t._v("k/K：kilobytes")]),t._v(" "),a("li",[t._v("m/M：megabytes")]),t._v(" "),a("li",[t._v("g/G：gigabytes")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_max_body_size")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"推荐文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推荐文档"}},[t._v("#")]),t._v(" 推荐文档")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://lmjben.github.io/blog/operation-nginx-match.html#nginx-location-%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx Location 匹配规则"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);