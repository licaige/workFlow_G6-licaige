(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{585:function(a,t,s){"use strict";s.r(t);var i=s(45),e=Object(i.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"git-配置和-gitignore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-配置和-gitignore"}},[a._v("#")]),a._v(" Git 配置和.gitignore")]),a._v(" "),s("h2",{attrs:{id:"git-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-配置"}},[a._v("#")]),a._v(" Git 配置")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git config -e [--global] # 编辑Git配置文件\n")])])]),s("ul",[s("li",[a._v("配置用户名和邮箱\n用户名邮箱作用 : 我们需要设置一个用户名 和 邮箱, 这是用来上传本地仓库到GitHub中, 在GitHub中显示代码上传者;")])]),a._v(" "),s("p",[s("strong",[a._v("使用命令：")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('git config --global user.name "yourname" //设置用户名  \ngit config --global user.email "your email"  //设置邮箱  \n')])])]),s("ul",[s("li",[a._v("配置自动换行")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git config --global core.autocrlf input #提交到git是自动将换行符转换为lf\n")])])]),s("ul",[s("li",[a._v("彩色的git输出")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git config --global color.ui true\n")])])]),s("ul",[s("li",[a._v("配置别名")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git config --global alias.st status #git st\ngit config --global alias.co checkout #git co\ngit config --global alias.br branch #git br\ngit config --global alias.ci commit #git ci\n")])])]),s("ul",[s("li",[a._v("设置显示中文文件名")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git config –global core.quotepath false \n")])])]),s("ul",[s("li",[a._v("获取配置列表和帮助")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git config --list #查看配置的信息\n\ngit help config #获取帮助信息\n")])])]),s("h2",{attrs:{id:"gitignore文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitignore文件"}},[a._v("#")]),a._v(" .gitignore文件")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("屏蔽文件 : .gitignore文件是告诉Git哪些目录或者文件需要忽略, 这些文件将不被提交;")])]),a._v(" "),s("li",[s("p",[a._v(".gitignore位置 : 项目根目录下;")])]),a._v(" "),s("li",[s("p",[a._v("过滤模式 : Git中的 .gitignore 中有两种模式,开放模式 和保守模式,保守模式的优先级要高于开放模式;")])]),a._v(" "),s("li",[s("p",[a._v("开放模式 : 设置哪些文件和目录被过滤, 凡是在文件中列出的文件或者目录都要被过滤掉;")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 过滤目录 : /bin/ 就是将bin目录过滤, 该文件下的所有目录和文件都不被提交;  \n-- 过滤某个类型文件 : *.zip *.class 就是过滤zip 和 class 后缀的文件, 这些文件不被提交;  \n-- 过滤指定文件 : /gen/R.java, 过滤该文件, 该文件不被提交;\n")])])]),s("ul",[s("li",[a._v("保守模式 : 设置哪些文件不被过滤, 凡是列在其中的文件都要完整的提交上去;")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-- 跟踪目录 : !/src , 该目录下的所有文件都要被提交;\n-- 跟踪某类文件 : !*.java , 凡是java文件都要保留;\n-- 跟踪指定文件 : !/AndroidManifest.xml , 该文件需要保留, 提交上去;\n")])])]),s("ul",[s("li",[a._v("配置原则 : 一般情况下采用开放模式鱼保守模式共同使用;")])]),a._v(" "),s("p",[s("strong",[a._v("eg : 一个目录下有很多目录和文件, 当我们只需要保留其中的一个文件的时候, 先用开放模式不保留这些文件, 然后用保守模式将这个文件留下来, 保守模式的优先级要高于开放模式;")])]),a._v(" "),s("h3",{attrs:{id:"具体操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体操作"}},[a._v("#")]),a._v(" 具体操作")]),a._v(" "),s("ol",[s("li",[a._v("在项目根目录创建.gitignore文件")]),a._v(" "),s("li",[a._v("在文件中列出不需要提交的文件名，文件夹名，每个一行")]),a._v(" "),s("li",[a._v(".gitignore文件需要提交，就像普通文件一样")])]),a._v(" "),s("h3",{attrs:{id:"通常会被ignore的文件有"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通常会被ignore的文件有"}},[a._v("#")]),a._v(" 通常会被ignore的文件有：")]),a._v(" "),s("ol",[s("li",[a._v("log文件")]),a._v(" "),s("li",[a._v("task runner builds")]),a._v(" "),s("li",[a._v("node_modules等文件夹")]),a._v(" "),s("li",[a._v("IDEs生成的文件")]),a._v(" "),s("li",[a._v("个人笔记")])]),a._v(" "),s("h3",{attrs:{id:"例如"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例如"}},[a._v("#")]),a._v(" 例如")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("*.log\nbuild/\nnode_modules/\n.idea/\nmy_notes.txt\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);