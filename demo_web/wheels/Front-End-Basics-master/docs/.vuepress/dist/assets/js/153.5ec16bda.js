(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{624:function(t,e,a){"use strict";a.r(e);var s=a(45),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" Ajax")]),t._v(" "),a("p",[a("strong",[t._v("Asynchronous JavaScript and XML : 异步的js和XML，前后端数据交互的一种技术。")])]),t._v(" "),a("blockquote",[a("p",[t._v("Ajax优点")])]),t._v(" "),a("p",[t._v("传输获取数据 , 不用跳转页面，在本页面请求服务器，做到实时验证。"),a("br"),t._v("\n减少用户返工率并且优化用户体验。")]),t._v(" "),a("h2",{attrs:{id:"方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式"}},[t._v("#")]),t._v(" 方式")]),t._v(" "),a("h3",{attrs:{id:"get方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get方式"}},[t._v("#")]),t._v(" GET方式")]),t._v(" "),a("p",[t._v("把数据放在url中发送，以获取数据为主")]),t._v(" "),a("h4",{attrs:{id:"步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("p",[a("strong",[t._v("1、创建一个ajax对象")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var ajax = new XMLHttpRequest();\n")])])]),a("p",[a("strong",[t._v("2、传入请求参数")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//method,url,true\t参数\najax.open('get','php/get.php?user='+encodeURIComponent(value),true);\n")])])]),a("p",[a("strong",[t._v("3、发送数据")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ajax.send(null);\n")])])]),a("p",[t._v("send()方法传入一个参数，即要作为请求主体发送的数据。如果不需要通过请求主体发送数据，则必须传入null，因为这个参数对有些浏览器来说是必需的。")]),t._v(" "),a("h4",{attrs:{id:"注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意点"}},[t._v("#")]),t._v(" 注意点")]),t._v(" "),a("p",[t._v("1、用get方式请求，是有长度限制的。因为是通过地址栏的查询信息来请求的。（即get通过url地址传输，post通过浏览器内部传输）")]),t._v(" "),a("p",[t._v("2、请求信息在地址栏中显示，直接暴露了用户填写的信息，并且访问的数据会被浏览器缓存到历史记录中，所以说不安全。")]),t._v(" "),a("p",[t._v("3、在get拼接数据的时候要用encodeURIComponent来包一下，不然在IE低版本浏览器中使用中文会乱码的。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("encodeURIComponent('刘')  转成url\ndecodeURIComponent('%E5%88%98')  转成中文\n")])])]),a("p",[t._v("4、有缓存问题\t解决方法：在url？后面连接一个随机数，时间戳")]),t._v(" "),a("h3",{attrs:{id:"post方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post方式"}},[t._v("#")]),t._v(" POST方式")]),t._v(" "),a("p",[t._v("数据放在 "),a("code",[t._v("send()")]),t._v(" 中发送")]),t._v(" "),a("h4",{attrs:{id:"步骤-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-2"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("p",[a("strong",[t._v("1、创建一个ajax对象")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var ajax = new XMLHttpRequest();\n")])])]),a("p",[a("strong",[t._v("2、传入请求参数")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ajax.open('post','php/post.php',true);\n//method,url,true三个参数的含义\n1、提交方式 Form-method \n2、提交地址 Form-action \n3、异步（同步）\n异步:非阻塞 前面的代码不会影响后面代码的执行\n同步:阻塞 前面的代码会影响后面代码的执行\n")])])]),a("p",[a("strong",[t._v("3、设置请求头")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ajax.setRequestHeader('Content-Type','application/x-www-form-urlencoded')\n\n// 要成功的发送请求头部信息，必须在调用open() 方法之后且调用send()方法之前调用setRequestHeader()\n")])])]),a("p",[a("strong",[t._v("4、发送数据")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ajax.send('user=cfangxu')\n")])])]),a("h4",{attrs:{id:"注意点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意点-2"}},[t._v("#")]),t._v(" 注意点")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("用post方式请求，理论上来说是没有长度或体积限制的，看具体浏览器和后端的设置。")])]),t._v(" "),a("li",[a("p",[t._v("数据是通过http正文（请求体-请求正文）进行发送的，不会直接的暴露用户的信息，并且发送的数据不会被浏览器缓存，相对来说是比较安全的。")])]),t._v(" "),a("li",[a("p",[t._v("在send()的前面需要设置一个请求头（不设置要出错）。")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("post提交的数据格式有多种\n\n    text/plain\n    application/x-www-form-urlencoded - 默认\n    multipart/form-data\n")])])]),a("p",[t._v("在post提交数据的时候，需要设置请求头"),a("code",[t._v("content-type:")]),t._v("值可以为上面三中类型之一")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ajax.setRequestHeader( 'Content-Type','application/x-www-form-urlencoded');\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("open的时候，不用像get那样去拼数据，拼接数据是在send中填写。")])]),t._v(" "),a("h2",{attrs:{id:"接收数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接收数据"}},[t._v("#")]),t._v(" 接收数据")]),t._v(" "),a("h3",{attrs:{id:"onload-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#onload-事件"}},[t._v("#")]),t._v(" onload 事件")]),t._v(" "),a("p",[t._v("属于html5的，有兼容性问题")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ajax.onload = function () {\n    //打印传输过来的数据\n    console.log(ajax.responseText)\n}\n")])])]),a("h3",{attrs:{id:"onreadystatechange-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#onreadystatechange-事件"}},[t._v("#")]),t._v(" onreadystatechange 事件")]),t._v(" "),a("p",[t._v("支持IE6，兼容性好。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("其中的readyState属性：请求状态 \n0  （未初始化）还没有调用open()方法0是监听不到的\n1  启动，open() 方法已经被调用。\n2  发送，send() 方法已经被调用，但尚未接收到响应。 \n3  接收，已经接收到部分相应数据。 \n4  完成，已经接收到全部响应数据，而且可以在客户端使用了。\n")])])]),a("p",[t._v("readyState : ajax工作状态"),a("br"),t._v("\nonreadystatechange : 当readyState改变的时候触发"),a("br"),t._v("\nstatus : 服务器状态，http状态码"),a("br"),t._v("\nresponseText : 返回以文本形式存放的内容  ajax请求返回的内容就被存放到这个属性下面")]),t._v(" "),a("h3",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("事件监听最好写在事件发生之前(即.onload（.onreadystatechange）要放在.send之前)，避免没有监听到。")])]),t._v(" "),a("h2",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-兼容性问题-单纯了解-可以直接略过"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-兼容性问题-单纯了解-可以直接略过"}},[t._v("#")]),t._v(" "),a("code",[t._v("XMLHttpRequest")]),t._v(" 兼容性问题，单纯了解，可以直接略过")]),t._v(" "),a("p",[a("code",[t._v("new XMLHttpRequest()")]),t._v(" ie6 及以下不支持，所以需要用到插件"),a("br"),t._v(" "),a("code",[t._v("new ActiveXObject('MSXML2.XMLHTTP')")]),t._v("\nIE中会有三种不同的XHR版本： "),a("code",[t._v("MSXML2.XMLHTTP")]),t._v(" 、 "),a("code",[t._v("MSXML2.XMLHTTP.3.0")]),t._v(" 、 "),a("code",[t._v("MSXML2.XMLHTTP.6.0")]),t._v(" 因为只做了解，这里用最老的那一版")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("兼容写法如下：\nvar xhr = null;\nif (window.XMLHttpRequest) {\t\n   //直接用XMLHttpRequest是不能做判断的，因为IE6下没有，window.XMLHttpRequest会返回undefined\n   xhr = new XMLHttpRequest();\n} else {\n   xhr = new ActiveXObject('MSXML2.XMLHTTP');\n}\n\n也可以用try catch来解决。\ntry {\n   xhr = new XMLHttpRequest();\n} catch (e) {\n   xhr = new ActiveXObject('MSXML2.XMLHTTP');\n}\n")])])]),a("h3",{attrs:{id:"表单提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单提交"}},[t._v("#")]),t._v(" 表单提交")]),t._v(" "),a("p",[a("strong",[t._v("form 标签的一些属性")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("action : 数据提交的地址，默认是当前页面\n\nmethod : 数据提交的方式，默认是get方式\n    1.get\n    把数据名称和数据值用=连接，如果有多个的话，那么他会把多个数据组合用&进行连接，然后把数据放到url?后面传到指定页面\n    2.post\n\t通过请求头进行请求\n\nenctype : 提交的数据格式，默认application/x-www-form-urlencoded\n")])])]),a("h3",{attrs:{id:"上传文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上传文件"}},[t._v("#")]),t._v(" 上传文件")]),t._v(" "),a("p",[t._v("不管是form还是ajax,上传必须要用post请求方式来传输。如果后端返回的内容有中文编码格式，那么直接输入到页面中就能变成中文了。")]),t._v(" "),a("h4",{attrs:{id:"form"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#form"}},[t._v("#")]),t._v(" form")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<form action="post_file.php" method="post" enctype="multipart/form-data">\n\t   \t<input type="file" name="file" id="f" value="" />\n\t   \t<input type="submit" value="上传"/>\n</form>\naction会跳转页面\n')])])]),a("h4",{attrs:{id:"ajax-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax-2"}},[t._v("#")]),t._v(" ajax")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var ajax = new XMLHttpRequest();\n\najax.open('post','post_file.php',true);\n\n//传输类型设置为二进制的格式\najax.setRequestHeader('Content-Type','multipart/form-data');\n\n//二进制传输在写入send前要用FormData转换\nvar fromD = new FormData();\t\n\n//FormData构造函数中有一个append方法\n//在file中，有一个对象：files（详细信息的列表）files[0]里面是files的具体参数；\nfromD.append('file',f.files[0]);\t\n\najax.send(fromD)\n\n\najax的上传方式需要注意以下几点：\n1.new FormData()\n\n2.给这个对象append(key,value)\nkey：跟后端的要求走\nvalue:file元素的files[0];\n\n3.send(这个对象)\n")])])]),a("h3",{attrs:{id:"xmlhttprequest-2级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-2级"}},[t._v("#")]),t._v(" XMLHttpRequest 2级")]),t._v(" "),a("h4",{attrs:{id:"formdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#formdata"}},[t._v("#")]),t._v(" FormData")]),t._v(" "),a("p",[t._v("上面的ajax上传文件用到的 "),a("code",[t._v("FormData")]),t._v(" 类型就是 "),a("code",[t._v("XMLHttpRequest 2级")]),t._v("中定义的。\b")]),t._v(" "),a("p",[t._v("FormData 为序列化表单以及创建与表单格式相同的数据(用于XHR传输)提供了便利。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var data = new FormData();\ndata.append('name','cfangxu');\n")])])]),a("p",[a("code",[t._v("append()")]),t._v("方法接收两个参数：键和值，分别对应表单字段的名字和字段中包含的值。可以像上面代码一样添加任意多个值。")]),t._v(" "),a("p",[t._v("FormData 构造函数可以直接传入表单元素，表单元素的数据预先向其中填入键值对。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var data = new FormData(document.forms[0]);\n")])])]),a("p",[t._v("FormData的另一个方便之处在于用其发送POST请求可以不必明确地在XHR对象上设置请求头部，XHR对象能够识别传入的数据类型是FormData的实例，并配置适当的头部信息。")]),t._v(" "),a("h4",{attrs:{id:"overridemimetype-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overridemimetype-方法"}},[t._v("#")]),t._v(" overrideMimeType() 方法")]),t._v(" "),a("p",[t._v("重写XHR响应的MIME类型，比如服务器返回的MIME类型是 "),a("code",[t._v("text/plain")]),t._v("，但是数据中实际包含的是XML。根据MIME类型，即使数据是XML， responseXML属性中仍然是null，通过调用 "),a("code",[t._v("overrideMimeType()")]),t._v("方法，可以保证把响应当做XML而并非文本来处理。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var xhr = new XMLHttpRequest();\nxhr.open('get','text.php',true);\nxhr.overrideMimeType('text/xml');\nxhr.send(null);\n")])])]),a("h4",{attrs:{id:"load-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#load-事件"}},[t._v("#")]),t._v(" load 事件")]),t._v(" "),a("p",[t._v("上面提到过，用load事件替代readystatechange,响应接收完毕后会触发load事件，所以也就没有必要去检查readyState属性了，不过只要浏览器接收到服务器的响应，不管状态如何，都会触发load事件。所以必须要检查status属性，才能确定数据是否真的是可用的。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var xhr = new XMLHttpRequest();\nxhr.onload = function () {\n    if(xhr.status >= 200 && xhr.status < 300) {\n        console.log(xhr.responseText);\n    }else {\n        console.log('Request is unsuccessful' + xhr.status)\n    }\n}\nxhr.open('get','test.php',true);\nxhr.send(null);\n")])])]),a("h4",{attrs:{id:"progress-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#progress-事件"}},[t._v("#")]),t._v(" progress 事件")]),t._v(" "),a("p",[t._v("这个事件会在浏览器接收新数据期间周期性地触发。事件监听函数会接收到一个event对象，其target属性是XHR对象，但是包含着三个额外的属性：lengthComputable、position和totalSize。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("lengthComputable: 是一个表示进度信息是否可用的布尔值。")])]),t._v(" "),a("li",[a("p",[t._v("position: 表示已经接收的字节数")])]),t._v(" "),a("li",[a("p",[t._v("totalSize: 表示根据Content-Length响应头部确定的预期字节数。")])])]),t._v(" "),a("p",[t._v("这些信息可以用来展示进度。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var xhr = new XMLHttpRequest();\nxhr.onload = function () {\n    if(xhr.status >= 200 && xhr.status < 300) {\n        console.log(xhr.responseText);\n    }else {\n        console.log('Request is unsuccessful' + xhr.status)\n    }\n}\nxhr.onprogress = function (event) {\n    var showEle = document.getElementById('status');\n    if(event.lengthComputable){\n        showEle.innerHTML = '接收' + event.position + 'of' + event.totalSize + '字节';\n    }\n}\nxhr.open('get','test.php',true);\nxhr.send(null);\n")])])]),a("p",[t._v("为确保正常执行，必须在调用open()方法之前添加onprogress事件监听函数。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest实例的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest实例的属性"}},[t._v("#")]),t._v(" XMLHttpRequest实例的属性")]),t._v(" "),a("p",[t._v("readyState"),a("br"),t._v("\nresponseType"),a("br"),t._v("\nresponseText"),a("br"),t._v("\nresponseXML"),a("br"),t._v("\nstatus"),a("br"),t._v("\nstatusText"),a("br"),t._v("\nwithCredentials")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest实例的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest实例的方法"}},[t._v("#")]),t._v(" XMLHttpRequest实例的方法")]),t._v(" "),a("p",[t._v("abort()  abort方法用来终止已经发出的HTTP请求。"),a("br"),t._v("\ngetAllResponseHeaders()"),a("br"),t._v("\ngetResponseHeader()"),a("br"),t._v("\nopen()"),a("br"),t._v("\nsend()"),a("br"),t._v("\nsetRequestHeader()"),a("br"),t._v("\noverrideMimeType()")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest实例的事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest实例的事件"}},[t._v("#")]),t._v(" XMLHttpRequest实例的事件")]),t._v(" "),a("p",[t._v("readyStateChange事件"),a("br"),t._v("\nprogress事件"),a("br"),t._v("\nload事件")])])}),[],!1,null,null,null);e.default=r.exports}}]);