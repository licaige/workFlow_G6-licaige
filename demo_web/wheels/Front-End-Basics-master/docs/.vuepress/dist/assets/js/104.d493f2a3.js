(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{566:function(t,s,a){"use strict";a.r(s);var r=a(45),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mysql-必知必会"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-必知必会"}},[t._v("#")]),t._v(" Mysql 必知必会")]),t._v(" "),a("h2",{attrs:{id:"术语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#术语"}},[t._v("#")]),t._v(" 术语")]),t._v(" "),a("p",[t._v("不同的人可能会使用相同的数据库术语表示不同的事物，会造成一些混乱，下面是一张重要的数据库术语清单。")]),t._v(" "),a("h3",{attrs:{id:"数据库-database"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库-database"}},[t._v("#")]),t._v(" 数据库（database）")]),t._v(" "),a("p",[a("strong",[t._v("数据库是保存有组织的数据的容器（通常是一个文件或一组文件）。")])]),t._v(" "),a("blockquote",[a("p",[t._v("易混点：人们经常用“数据库”这个词代表他们使用的数据库软件。数据库软件是 DBMS(数据库管理系统)，例如 MySQL 就是一种 DBMS ，而数据库是通过 DBMS 创建和操纵的容器。我们通常不直接访问数据库，而是通过使用 DBMS 来访问数据库。")])]),t._v(" "),a("h3",{attrs:{id:"表-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表-table"}},[t._v("#")]),t._v(" 表（table）")]),t._v(" "),a("p",[a("strong",[t._v("表是某种特定类型数据的结构化清单。")])]),t._v(" "),a("p",[t._v("数据库中的每个表都有一个名字，用来标识自己，称之为“表名”。此名字是唯一的，在相同的数据库中不能使用重复的表名，但是在不同的数据库中可以使用。")]),t._v(" "),a("h3",{attrs:{id:"模式-schema"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模式-schema"}},[t._v("#")]),t._v(" 模式（schema）")]),t._v(" "),a("p",[a("strong",[t._v("模式是关于数据库和表的布局及特性的信息。")])]),t._v(" "),a("h3",{attrs:{id:"列-column"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列-column"}},[t._v("#")]),t._v(" 列（column）")]),t._v(" "),a("p",[a("strong",[t._v("列是表中的一个字段。所有的表都是由一个或多个列组成的。")])]),t._v(" "),a("h3",{attrs:{id:"数据类型-datatype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型-datatype"}},[t._v("#")]),t._v(" 数据类型（datatype）")]),t._v(" "),a("p",[a("strong",[t._v("数据类型是所容许的数据的类型。每个表列都有相应的数据类型，它限制（或容许）该列中存储的数据类型。")])]),t._v(" "),a("h3",{attrs:{id:"行-row"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行-row"}},[t._v("#")]),t._v(" 行（row）")]),t._v(" "),a("p",[a("strong",[t._v("行是表中的一个记录。")])]),t._v(" "),a("p",[t._v("有人会把行（row）称之为数据库记录（record），这两个数据是可以互相代替的，但是从技术上说，行才是正确的术语。")]),t._v(" "),a("h3",{attrs:{id:"主键-primary-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主键-primary-key"}},[t._v("#")]),t._v(" 主键（primary key）")]),t._v(" "),a("p",[a("strong",[t._v("主键是一列（或一组列），其值能够唯一区分表中每个行。")])]),t._v(" "),a("p",[t._v("表中的任何列只要满足以下条件，都可以作为主键：")]),t._v(" "),a("ul",[a("li",[t._v("任意两行都不具有相同的主键值；")]),t._v(" "),a("li",[t._v("每个行都必须具有一个主键值（主键列不允许 NULL 值）")])]),t._v(" "),a("p",[t._v("此外还有几个主键的最佳实践：")]),t._v(" "),a("ul",[a("li",[t._v("不更新主键列中的值；")]),t._v(" "),a("li",[t._v("不重用主键列的值；")]),t._v(" "),a("li",[t._v("不在主键列中使用可能会更改的值。（例如，如果使用一个名字作为主键以标识某个供应商，当该供应商合并和更改其名字时，就得必须更改这个主键。）")])]),t._v(" "),a("h3",{attrs:{id:"外键-foreign-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外键-foreign-key"}},[t._v("#")]),t._v(" 外键（foreign key）")]),t._v(" "),a("p",[t._v("外键为某个表中的一列，它包含另一个表的主键值，定义了两个表之间的关系。")]),t._v(" "),a("h3",{attrs:{id:"子句-clause"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子句-clause"}},[t._v("#")]),t._v(" 子句（clause）")]),t._v(" "),a("p",[t._v("SQL 语句由子句构成，有些子句是必需的，而有的是可选的。一个子句通常由一个关键字和所提供的数据组成。例如 SELECT 语句的 FROM 子句。")]),t._v(" "),a("h3",{attrs:{id:"操作符-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作符-operator"}},[t._v("#")]),t._v(" 操作符（operator）")]),t._v(" "),a("p",[t._v("用来联结或改变 WHERE 子句中的子句的关键字。也称为 "),a("strong",[t._v("逻辑操作符（logical operator）")])]),t._v(" "),a("h3",{attrs:{id:"通配符-wildcard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通配符-wildcard"}},[t._v("#")]),t._v(" 通配符（wildcard）")]),t._v(" "),a("p",[t._v("用来匹配值的一部分的特殊字符。")]),t._v(" "),a("h3",{attrs:{id:"搜索模式-search-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搜索模式-search-pattern"}},[t._v("#")]),t._v(" 搜索模式（search pattern）")]),t._v(" "),a("p",[t._v("由字面量、通配符或两者组合构成的搜索条件")]),t._v(" "),a("h3",{attrs:{id:"拼接-concatenate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拼接-concatenate"}},[t._v("#")]),t._v(" 拼接（concatenate）")]),t._v(" "),a("p",[t._v("将值联结到一起构成单个值")]),t._v(" "),a("h3",{attrs:{id:"别名-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#别名-alias"}},[t._v("#")]),t._v(" 别名（alias）")]),t._v(" "),a("p",[t._v("是一个字段或值的替换名。别名用 AS 关键字赋予。别名有时也称为导出列（derived column），不管称为什么，它们所代表的都是相同的东西。")]),t._v(" "),a("h3",{attrs:{id:"聚集函数-aggregate-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚集函数-aggregate-function"}},[t._v("#")]),t._v(" 聚集函数（aggregate function）")]),t._v(" "),a("p",[t._v("运行在行组上，计算和返回单个值的函数。")]),t._v(" "),a("h3",{attrs:{id:"查询-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询-query"}},[t._v("#")]),t._v(" 查询（query）")]),t._v(" "),a("p",[t._v("任何 SQL 语句都是查询。但此术语一般指 SELECT 语句。")]),t._v(" "),a("h3",{attrs:{id:"相关子查询-correlated-subquery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关子查询-correlated-subquery"}},[t._v("#")]),t._v(" 相关子查询（correlated subquery）")]),t._v(" "),a("p",[t._v("涉及外部查询的子查询。")]),t._v(" "),a("h3",{attrs:{id:"可伸缩性-scale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可伸缩性-scale"}},[t._v("#")]),t._v(" 可伸缩性（scale）")]),t._v(" "),a("p",[t._v("能够适应不断增加的工作量而不失败。设计良好的数据库或应用程序称之为可伸缩性好（scale well）")]),t._v(" "),a("h3",{attrs:{id:"变量-variable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量-variable"}},[t._v("#")]),t._v(" 变量（variable）")]),t._v(" "),a("p",[t._v("内存中一个特定的位置，用来临时存储数据。所有 MySQL 变量都必须以 "),a("code",[t._v("@")]),t._v(" 开始。")]),t._v(" "),a("h3",{attrs:{id:"sql-structured-query-language"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-structured-query-language"}},[t._v("#")]),t._v(" SQL（Structured Query Language）")]),t._v(" "),a("p",[a("strong",[t._v("SQL 是结构化查询语言（Structured Query Language）的缩写，是一种专门用来与数据库通信的语言。")])]),t._v(" "),a("p",[t._v("SQL 的优点：")]),t._v(" "),a("ul",[a("li",[t._v("SQL 不是某个特定数据库供应商专有的语言。即 SQL 不是一种专利语言，而且存在一个标准委员会。几乎所有重要的 DBMS 都支持 SQL。")]),t._v(" "),a("li",[t._v("SQL 简单易学。它的语句全都是由描述性很强的英语单词组成，而且这些单词的书目不多。")]),t._v(" "),a("li",[t._v("SQL 尽管看上去很简单，但它实际上是一种强有力的语言，灵活使用其语言元素，可以进行非常复杂和高级的数据库操作。")])]),t._v(" "),a("h2",{attrs:{id:"mysql-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-安装"}},[t._v("#")]),t._v(" MySQL 安装")]),t._v(" "),a("p",[t._v("推荐几个 MySQL 安装和连接的经验文章")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.scienjus.com/install-mysql-on-mac/",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 Mac 下安装 MySQL"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/289d8ad3defa",target:"_blank",rel:"noopener noreferrer"}},[t._v("mac 版 mysql 安装后显示 mysql: command not found 咋整？"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"mysql-应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-应用"}},[t._v("#")]),t._v(" MySQL 应用")]),t._v(" "),a("h3",{attrs:{id:"mysql-命令行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-命令行"}},[t._v("#")]),t._v(" mysql 命令行")]),t._v(" "),a("ul",[a("li",[t._v("命令输入在 mysql> 之后；")]),t._v(" "),a("li",[t._v("命令用 ; 或 \\g 结束，换句话说，仅按 Enter 不执行命令；")]),t._v(" "),a("li",[t._v("输入 help 或 \\h 获得帮助，也可以输入更多的文本获得特定命令的帮助（如，输入 help select 获得试用 SELECT 语句的帮助）；")]),t._v(" "),a("li",[t._v("输入 quit 或 exit 退出命令行。")])]),t._v(" "),a("h3",{attrs:{id:"连接数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接数据库"}},[t._v("#")]),t._v(" 连接数据库")]),t._v(" "),a("p",[t._v("连接数据库需要以下信息：")]),t._v(" "),a("ul",[a("li",[t._v("主机名（计算机名）——如果连接到本地 MySQL 服务器，为 localhost ;")]),t._v(" "),a("li",[t._v("端口（如果使用默认端口 3306 之外的端口）；")]),t._v(" "),a("li",[t._v("一个合法的用户名；")]),t._v(" "),a("li",[t._v("用户口令（如果需要）")])]),t._v(" "),a("p",[t._v("例如下面的指令：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mysql -u root -h localhost -P 3306 -p\n")])])]),a("h3",{attrs:{id:"数据库的登录和成员管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库的登录和成员管理"}},[t._v("#")]),t._v(" 数据库的登录和成员管理")]),t._v(" "),a("h4",{attrs:{id:"访问控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问控制"}},[t._v("#")]),t._v(" 访问控制")]),t._v(" "),a("p",[t._v("MySQL 服务器的安全基础是：用户应该对他们需要的数据具有适当的访问权，既不能多也不能少。")]),t._v(" "),a("p",[t._v("需要给用户提供他们所需的访问权，且仅提供他们所需的访问权。这就是所谓的"),a("strong",[t._v("访问控制")]),t._v("。访问控制的目的不仅仅是防止用户的恶意企图，访问控制也有助于避免很常见的无意识错误的结果，如错打 MySQL 语句，在不合适的数据库中操作或其他一些用户错误。")]),t._v(" "),a("h4",{attrs:{id:"管理用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管理用户"}},[t._v("#")]),t._v(" 管理用户")]),t._v(" "),a("h5",{attrs:{id:"查询已有用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询已有用户"}},[t._v("#")]),t._v(" 查询已有用户")]),t._v(" "),a("p",[t._v("MySQL 用户账号和信息存储在名为 mysql 的 MySQL 数据库中。一般只有在需要获得所有用户账号列表时才会直接访问。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USE")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" test             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" root             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n")])])]),a("h5",{attrs:{id:"创建用户账号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建用户账号"}},[t._v("#")]),t._v(" 创建用户账号")]),t._v(" "),a("blockquote",[a("p",[t._v("1、使用 CREATE USER 语句（推荐）")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" chenfangxu IDENTIFIED "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" chenfangxu       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" test             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" root             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("2、GRANT 语句也可以创建用户账号。（MySQL 8.0 以上的新版本已经将创建账户和赋予权限分开了，所以不能再用这种方法创建用户了）")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mysql8.0以下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" chenfangxu"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'%'")]),t._v(" IDENTIFIED "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("3、使用 INSERT 直接插入行到 user 表来增加用户（不建议）")])]),t._v(" "),a("h5",{attrs:{id:"设置访问权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置访问权限"}},[t._v("#")]),t._v(" 设置访问权限")]),t._v(" "),a("p",[t._v("在创建用户账号后，必须接着分配访问权限。新创建的用户账号没有访问权限。他们能登录 MySQL ，但不能看到数据，不能执行任何数据库操作。")]),t._v(" "),a("br"),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("查看赋予用户账号的权限")]),t._v(" "),a("code",[t._v("SHOW GRANTS FOR")])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" GRANTS "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" chenfangxu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Grants "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" chenfangxu@"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USAGE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("chenfangxu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@`%`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------+")]),t._v("\n")])])]),a("p",[t._v("权限 "),a("code",[t._v("USAGE ON *.*")]),t._v(" ,USAGE 表示根本没有权限，这句话就是说在任意数据库和任意表上对任何东西没有权限。")]),t._v(" "),a("p",[a("code",[t._v("chenfangxu@%")]),t._v(" 因为用户定义为 "),a("code",[t._v("user@host")]),t._v(", MySQL 的权限用用户名和主机名结合定义，如果不指定主机名，则使用默认的主机名"),a("code",[t._v("%")]),t._v("（即授予用户访问权限而不管主机名）。")]),t._v(" "),a("br"),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("添加（更新）用户权限")]),t._v(" "),a("code",[t._v("GRANT privileges ON databasename.tablename TO 'username'@'host';")])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" performance_schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" chenfangxu"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" GRANTS "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" chenfangxu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Grants "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" chenfangxu@"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("                                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USAGE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("chenfangxu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@`%`")]),t._v("                     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("performance_schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("chenfangxu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@`%`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------------------------------------------------+")]),t._v("\n")])])]),a("br"),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("撤销用户的权限")]),t._v(" "),a("code",[t._v("REVOKE privileges ON databasename.tablename FROM 'username'@'host';")])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REVOKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" performance_schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" chenfangxu"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" GRANTS "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" chenfangxu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Grants "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" chenfangxu@"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USAGE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("chenfangxu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@`%`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------+")]),t._v("\n")])])]),a("br"),t._v(" "),a("h4",{attrs:{id:"重命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重命名"}},[t._v("#")]),t._v(" 重命名")]),t._v(" "),a("blockquote",[a("p",[t._v("重命名："),a("code",[t._v("RENAME USER 'username' TO 'newusername';")])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RENAME")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" test1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" test1            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" root             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n")])])]),a("br"),t._v(" "),a("h4",{attrs:{id:"更改用户密码-mysql-8-0-11-后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更改用户密码-mysql-8-0-11-后"}},[t._v("#")]),t._v(" 更改用户密码(mysql 8.0.11 后)")]),t._v(" "),a("blockquote",[a("p",[t._v("更改用户密码："),a("code",[t._v("SET PASSWORD FOR 'username'@'host' = 'newpassword';")])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" PASSWORD "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" chenfangxu"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'%'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'654321'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更改root密码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'localhost'")]),t._v(" IDENTIFIED "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" caching_sha2_password "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yourpasswd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("br"),t._v(" "),a("h4",{attrs:{id:"删除用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除用户"}},[t._v("#")]),t._v(" 删除用户")]),t._v(" "),a("blockquote",[a("p",[t._v("删除用户："),a("code",[t._v("DROP USER 'username'@'host';")])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" chenfangxu"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" test             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" root             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n")])])]),a("p",[t._v("MySQL 5 以前， DROP USER 只能用来删除用户账号，不能删除相关的权限。因此，如果使用旧版的 MySQL 需要先用 REVOKE 删除与账号相关的权限，然后再用 DROP USER 删除账号。")]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"操作数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作数据库"}},[t._v("#")]),t._v(" 操作数据库")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建数据库，如创建 learnsql 数据库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATABASE")]),t._v(" learnsql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择数据库，如选择 learnsql 数据库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USE")]),t._v(" learnsql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示数据库列表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATABASES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示数据库内的表的列表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示表中每一列的详细信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLUMNS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"describe-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#describe-语句"}},[t._v("#")]),t._v(" DESCRIBE 语句")]),t._v(" "),a("p",[t._v("MySQL 中 DESCRIBE 可以作为 SHOW COLUMNS FROM 的快捷方式。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以下两种命令结果相同")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLUMNS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESCRIBE")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"下面用到的数据库文件可在-mysql-scripts-找到。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下面用到的数据库文件可在-mysql-scripts-找到。"}},[t._v("#")]),t._v(" 下面用到的数据库文件可在 "),a("a",{attrs:{href:"https://github.com/qiqihaobenben/Front-End-Basics/tree/master/assistive-tools/database/mysql_scripts",target:"_blank",rel:"noopener noreferrer"}},[t._v("mysql_scripts"),a("OutboundLink")],1),t._v(" 找到。")]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"检索数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检索数据"}},[t._v("#")]),t._v(" 检索数据")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索单个列，例如从 products 表中检索一个名为 prod_name 的列。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索多个列。注意，列名之间要用逗号分隔，最后一个列名后不要加逗号，会报错。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索所有列。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只检索出不同的行， DESTINCT 关键字可以让指令只返回不同的值。如果指令，products 表中可能一共有14行，现在只返回不同（唯一）的 vend_id 行，可能就只返回4行了。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限制结果， LIMIT 5 表示只返回不多于5行。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# LIMIT 5, 5 表示返回从行5开始的5行。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者使用 LIMIT 5 OFFSET 5， 跟上面结果相同。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OFFSET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意，返回行数是从 0 开始的。所以，LIMIT 1, 1 将检索出第二行，而不是第一行。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"排序检索数据-order-by"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序检索数据-order-by"}},[t._v("#")]),t._v(" 排序检索数据 ( ORDER BY )")]),t._v(" "),a("p",[t._v("不使用排序时，其实检索出的数据并不是以纯粹的随机顺序显示的，数据一般将以它在底层表中出现的顺序显示。这可以是数据最初添加到表中的顺序，但是，如果数据后来进行过更新或者删除，则此顺序将会受到 MySQL 重用回收存储空间的影响。因此，如果不明确控制的话，不能（也不应该）依赖该排序顺序。")]),t._v(" "),a("p",[a("strong",[t._v("关系数据库设计理论认为：如果不明确规定排序顺序，则不应该假定检索出的数据的顺序有意义。")])]),t._v(" "),a("p",[t._v("ORDER BY 子句，可以给 SELECT 语句检索出来的数据进行排序。 ORDER BY 子句取一个或多个列的名字。据此对输出进行排序。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 没有排序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对 prod_name 列以字母顺序排序数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按多个列排序：如下会先按照 prod_price 排序，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只有出现相同的 prod_price 时，才会再按照 prod_name 排序。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定排序方向，默认是升序，例如按照 prod_price 降序排序（最贵的排在最前面）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 多个列排序，例如按照 prod_price 降序，最贵的在最前面，然后在对产品名排序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ORDER BY 和 LIMIT 搭配，可以找出一个列中最高或最低的值。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意：")]),t._v(" "),a("ul",[a("li",[t._v("ORDER BY 子句中使用的列不一定非得是检索的列，用非检索的列排序也是完全合法的。")]),t._v(" "),a("li",[t._v("如果想在多个列上进行降序排序，必须对每个列指定 DESC 关键字。")]),t._v(" "),a("li",[t._v("ASC 是升序排序，升序是默认的，不指定 DESC ，那就是按照 ASC 升序排序。")]),t._v(" "),a("li",[t._v("ORDER BY 子句必须位于 FROM 子句之后，如果使用 LIMIT ，它必须位于 ORDER BY 之后。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"过滤数据-where"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤数据-where"}},[t._v("#")]),t._v(" 过滤数据 （ WHERE ）")]),t._v(" "),a("p",[t._v("数据库包含大量的数据，但是我们很少需要检索表中所有的行。只检索所需数据需要指定过滤条件，在 SELECT 语句中，数据根据 WHERE 子句中指定的搜索条件进行过滤。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索 pro_price 为 2.50 的行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行筛选匹配时默认不区分大小写，所以 fuses 可以检索出 Fuses")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fuses'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Fuses     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.42")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+------------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索出 vend_id 不等于 1003 的行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索 prod_price 在 5 到 10 之间的所有行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("BETWEEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查具有 NULL 值的列，用 IS NULL 子句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" cust_email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"where-子句操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#where-子句操作符"}},[t._v("#")]),t._v(" WHERE 子句操作符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("操作符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("<>")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("!=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("<")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("小于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("<=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("小于等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(">")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(">=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("BETWEEN")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("在指定的两个值之间")])])])]),t._v(" "),a("h3",{attrs:{id:"注意-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-2"}},[t._v("#")]),t._v(" 注意：")]),t._v(" "),a("ul",[a("li",[t._v("WHERE 语句的位置：在同时使用 ORDER BY 和 WHERE 子句时，应该让 ORDER BY 位于 WHERE 之后，否则将会产生错误。")]),t._v(" "),a("li",[t._v("WHERE 子句中使用的条件，如果将值与串类型（例如字符串）比较，需要加引号，用来与数值列进行比较的值不用引号。")]),t._v(" "),a("li",[t._v("NULL 无值(no value)，它与字段 0 、空字符串或仅仅包含空格不同。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"数据过滤-and、-or、-in"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据过滤-and、-or、-in"}},[t._v("#")]),t._v(" 数据过滤（ AND、 OR、 IN ）")]),t._v(" "),a("p",[t._v("MySQL 允许组合多个 WHERE 子句。这些子句分为两种方式使用：以 AND 子句的方式或 OR 子句的方式使用。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### AND 操作符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索出 vend_id 等于 1003 并且 prod_price 小于等于 10 的行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#### OR 操作符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检索出 vend_id 等于 1002 或 vend_id 等于 1003 的所有行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# AND 和 OR 合用，AND 优先级高。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面检索出的结果是 vend_id 是 1003 并且 prod_price 大于等于 10 的和所有 vend_id 是 1002 的行。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出结果")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+----------------+------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_name      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+----------------+------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Fuses          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.42")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Oil can        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.99")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Detonator      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Bird seed      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Safe           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TNT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" sticks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+----------------+------------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果想检索出 vend_id 是 1003 并且 prod_price 大于等于 10 的和 vend_id 是 1002  并且 prod_price 大于等于 10 的行，需要加括号。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### IN 操作符，指定条件范围，范围中的每个条件都可以进行匹配。IN 取值是全部括在圆括号中的由逗号分隔的列表。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### NOT 操作符，否定它之后的任何条件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1003")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-3"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("WHERE 可包含任意数目的 AND 和 OR 操作符，并且允许两者结合以进行复杂和高效的过滤。不过 SQL 语言在处理 OR 操作符前，会优先处理 AND 操作符。")]),t._v(" "),a("li",[t._v("任何时候使用具有 AND 和 OR 操作符的 WHERE 子句， 都推荐使用圆括号明确地分组，不要过分依赖默认计算次序。")]),t._v(" "),a("li",[t._v("IN 和 OR 具有相同的功能，但是 IN 操作符有以下优点\n"),a("ul",[a("li",[t._v("过滤的字段太多的时候，IN 操作符的语法更清楚且更直观")]),t._v(" "),a("li",[t._v("IN 操作符一般比 OR 操作符执行的更快")]),t._v(" "),a("li",[t._v("IN 最大的优点是可以包含其他 SELECT 语句，能更动态地建立 WHERE 子句。")])])]),t._v(" "),a("li",[t._v("MySQL 支持使用 NOT 对 IN、BETWEEN 和 EXISTS 子句取反。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"用通配符过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用通配符过滤"}},[t._v("#")]),t._v(" 用通配符过滤")]),t._v(" "),a("h3",{attrs:{id:"百分号-通配符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#百分号-通配符"}},[t._v("#")]),t._v(" 百分号（%）通配符")]),t._v(" "),a("p",[a("code",[t._v("%")]),t._v(" 表示任何字符出现任意次数，可以使 0 次，1 次，n 次")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 找出所有以 jet 开头的产品")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jet%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_name    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JP1000  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JetPack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JP2000  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JetPack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+--------------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 通配符可在搜索模式中任意位置使用，并且可以使用多个通配符。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%anvil%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_name    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV01   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".5")]),t._v(" ton anvil "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV02   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" ton anvil  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV03   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" ton anvil  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+--------------+")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"下划线通配符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下划线通配符"}},[t._v("#")]),t._v(" 下划线通配符")]),t._v(" "),a("p",[t._v("下划线 _ 只能匹配单个字符，只能匹配一个，不能多也不能少。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 对比一下下面两个通配符结果")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_ ton anvil'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+-------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_name   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+-------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV02   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" ton anvil "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV03   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" ton anvil "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+-------------+")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'% ton anvil'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_name    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV01   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".5")]),t._v(" ton anvil "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV02   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" ton anvil  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV03   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" ton anvil  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+--------------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 下划线通配符比百分号通配符少了一个 .5 的数据")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-4"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("注意尾部空格，例如'%anvil' 是匹配不到 'anvil ',因为后面有个空格不容易发现，解决方法就是后面再附加一个 % ，或者用函数去掉首尾空格。")]),t._v(" "),a("li",[t._v("% 是不能匹配出 NULL 的。")]),t._v(" "),a("li",[t._v("通配符搜索的处理一般要比其他搜索花时间更长，所以不要过度使用通配符，如果其他操作符能达到同样的目的，优先使用其他操作符。在确实需要使用通配符时，除非绝对有必要，否则不要把他们用在搜索模式的开始处。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"用正则表达式进行搜索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用正则表达式进行搜索"}},[t._v("#")]),t._v(" 用正则表达式进行搜索")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 基本字符匹配，下面的语句检索列 prod_name 包含文本 1000 的所有行。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("REGEXP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1000'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 区分大小写需要用到 BINARY 关键字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("REGEXP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BINARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'S'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 使用 | 进行 OR 匹配，可以有两个以上的 OR 条件，例如： '1000|2000|3000'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("REGEXP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1000|2000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_name    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JetPack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JetPack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 匹配几个字符之一")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("REGEXP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[1,2,3] Ton'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_name   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" ton anvil "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" ton anvil "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 注意区别 1|2|3 Ton，这表示匹配出 1，2和3 Ton，其实[123]是[1|2|3]的缩写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("REGEXP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1|2|3 Ton'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_name     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" ton anvil   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" ton anvil   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JetPack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JetPack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TNT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" stick"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 匹配特殊字符， \\\\ 来转义特殊字符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" vendors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vend_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("REGEXP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\.'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" vend_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" vend_name    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Furball Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 匹配出连在一起的4个数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("REGEXP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[:digit:]{4}'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_name    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JetPack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JetPack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"列举元字符转义和定位元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列举元字符转义和定位元字符"}},[t._v("#")]),t._v(" 列举元字符转义和定位元字符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("元字符")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("\\f")]),t._v(" "),a("td",[t._v("换页")])]),t._v(" "),a("tr",[a("td",[t._v("\\n")]),t._v(" "),a("td",[t._v("换行")])]),t._v(" "),a("tr",[a("td",[t._v("\\r")]),t._v(" "),a("td",[t._v("回车")])]),t._v(" "),a("tr",[a("td",[t._v("\\t")]),t._v(" "),a("td",[t._v("制表")])]),t._v(" "),a("tr",[a("td",[t._v("\\v")]),t._v(" "),a("td",[t._v("纵向制表")])]),t._v(" "),a("tr",[a("td",[t._v("\\\\")]),t._v(" "),a("td",[t._v("反斜杠")])]),t._v(" "),a("tr",[a("td",[t._v("^")]),t._v(" "),a("td",[t._v("文本的开始")])]),t._v(" "),a("tr",[a("td",[t._v("$")]),t._v(" "),a("td",[t._v("文本的结束")])]),t._v(" "),a("tr",[a("td",[t._v("[[:<:]](8 版本之后改为 \\b)")]),t._v(" "),a("td",[t._v("词的开始")])]),t._v(" "),a("tr",[a("td",[t._v("[[:>:]](8 版本之后改为 \\b)")]),t._v(" "),a("td",[t._v("词的结束")])])])]),t._v(" "),a("p",[t._v("多数正则表达式实现使用单个反斜杠转义特殊字符，以便能使用这些字符本身。但 MySQL 要求两个反斜杠（MySQL 自己解释一个，正则表达式库解释另一个）。")]),t._v(" "),a("h3",{attrs:{id:"列举字符类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列举字符类"}},[t._v("#")]),t._v(" 列举字符类")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("[:alnum:]")]),t._v(" "),a("td",[t._v("任意字符和数字（同 [a-zA-Z0-9]）")])]),t._v(" "),a("tr",[a("td",[t._v("[:alpha:]")]),t._v(" "),a("td",[t._v("任意字符（同 [a-zA-Z]）")])]),t._v(" "),a("tr",[a("td",[t._v("[:blank:]")]),t._v(" "),a("td",[t._v("空格和制表 （同 [\\t]）")])]),t._v(" "),a("tr",[a("td",[t._v("[:cntrl:]")]),t._v(" "),a("td",[t._v("ASCII 控制字符 （ASCII 0 到 31 和 127）")])]),t._v(" "),a("tr",[a("td",[t._v("[:digit:]")]),t._v(" "),a("td",[t._v("任意数字 （同 [0-9]）")])]),t._v(" "),a("tr",[a("td",[t._v("[:xdigit:]")]),t._v(" "),a("td",[t._v("任意十六进制数字（同 [a-fA-F0-9]）")])]),t._v(" "),a("tr",[a("td",[t._v("[:lower:]")]),t._v(" "),a("td",[t._v("任意小写字母 （同 [a-z]）")])]),t._v(" "),a("tr",[a("td",[t._v("[:upper:]")]),t._v(" "),a("td",[t._v("任意大写字母（同 [A-Z]）")])]),t._v(" "),a("tr",[a("td",[t._v("[:print:]")]),t._v(" "),a("td",[t._v("任意可打印字符")])]),t._v(" "),a("tr",[a("td",[t._v("[:graph:]")]),t._v(" "),a("td",[t._v("与[:print:]相同，但不包含空格")])]),t._v(" "),a("tr",[a("td",[t._v("[:punct:]")]),t._v(" "),a("td",[t._v("既不在[:alnum:]又不在[:cntrl:]中的任意字符")])]),t._v(" "),a("tr",[a("td",[t._v("[:space:]")]),t._v(" "),a("td",[t._v("包括空格在内的任意空白字符(同 [\\f\\n\\r\\t\\v])")])])])]),t._v(" "),a("h3",{attrs:{id:"简单的正则表达式测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单的正则表达式测试"}},[t._v("#")]),t._v(" 简单的正则表达式测试")]),t._v(" "),a("p",[t._v("在不使用数据库表的情况下用 SELECT 来测试正则表达式。 REGEXP 检查总是返回 0（没有匹配）或 1（匹配）。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("REGEXP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello\\\\b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("REGEXP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello\\\\b'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------------+")]),t._v("\n")])])]),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"计算字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算字段"}},[t._v("#")]),t._v(" 计算字段")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 将查出来的名字和国家拼接出来展示，使用了 Concat、Trim函数，和 AS 关键字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Concat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Trim"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vend_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trim"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vend_country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" vend_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" vendors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" vend_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" vend_name              "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ACME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Anvils R Us"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Furball Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Jet "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("England"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Jouets Et Ours"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("France"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" LT Supplies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------------+")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 将20005订单中的所有物品查出来，通过数量和单价算出总价")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quantity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quantity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("item_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" expanded_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orderitems "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20005")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+----------+------------+----------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" quantity "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" item_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" expanded_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+----------+------------+----------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV01   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.99")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59.90")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV02   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.99")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29.97")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TNT2    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" FB      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+----------+------------+----------------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"测试计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试计算"}},[t._v("#")]),t._v(" 测试计算")]),t._v(" "),a("p",[t._v("SELECT 提供了测试和实验函数与计算的一个很好的方法，就是省略 FROM 子句")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+")]),t._v("\n")])])]),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"使用数据处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用数据处理函数"}},[t._v("#")]),t._v(" 使用数据处理函数")]),t._v(" "),a("p",[t._v("函数没有 SQL 的可移植性强，几乎每种主要的 DBMS 的实现都支持其他实现不支持的函数，有时差异还很大。为了代码的可移植性，很多人不赞成使用特殊实现的功能，虽然这样做很有好处，但是对于应用程序的性能可能出现影响。如果决定使用函数，应该保证做好代码注释。")]),t._v(" "),a("h3",{attrs:{id:"文本处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本处理函数"}},[t._v("#")]),t._v(" 文本处理函数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("函 数")]),t._v(" "),a("th",[t._v("说 明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Left()")]),t._v(" "),a("td",[t._v("返回串左边的字符")])]),t._v(" "),a("tr",[a("td",[t._v("Length()")]),t._v(" "),a("td",[t._v("返回串的长度")])]),t._v(" "),a("tr",[a("td",[t._v("Locate()")]),t._v(" "),a("td",[t._v("找出串的一个子串")])]),t._v(" "),a("tr",[a("td",[t._v("Lower()")]),t._v(" "),a("td",[t._v("将串转换为小写")])]),t._v(" "),a("tr",[a("td",[t._v("LTrim()")]),t._v(" "),a("td",[t._v("去掉串左边的空格")])]),t._v(" "),a("tr",[a("td",[t._v("Right()")]),t._v(" "),a("td",[t._v("返回串右边的字符")])]),t._v(" "),a("tr",[a("td",[t._v("RTrim()")]),t._v(" "),a("td",[t._v("去掉串右边的空格")])]),t._v(" "),a("tr",[a("td",[t._v("Soundex()")]),t._v(" "),a("td",[t._v("返回串的 SOUNDEX 值")])]),t._v(" "),a("tr",[a("td",[t._v("SubString()")]),t._v(" "),a("td",[t._v("返回子串的字符")])]),t._v(" "),a("tr",[a("td",[t._v("Upper()")]),t._v(" "),a("td",[t._v("将串转换为大写")])])])]),t._v(" "),a("p",[t._v("SOUNDEX 是一个将任何文本串转换为描述其语音表示的字母数字模式的算法。SOUNDEX 考虑了类似的发音字节和音节，使得能对串进行发音比较而不是字母比较。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 例如用 Y. Lie 把 Y Lee 搜出来，因为它们发音类似")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_contact "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Soundex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cust_contact"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Soundex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Y. Lie'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_name   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_contact "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+--------------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"日期和时间处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间处理函数"}},[t._v("#")]),t._v(" 日期和时间处理函数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("函 数")]),t._v(" "),a("th",[t._v("说 明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("AddDate()")]),t._v(" "),a("td",[t._v("增加一个日期（天、周等）")])]),t._v(" "),a("tr",[a("td",[t._v("AddTime()")]),t._v(" "),a("td",[t._v("增加一个时间（时、分等）")])]),t._v(" "),a("tr",[a("td",[t._v("CurDate()")]),t._v(" "),a("td",[t._v("返回当前日期")])]),t._v(" "),a("tr",[a("td",[t._v("CurTime()")]),t._v(" "),a("td",[t._v("返回当前时间")])]),t._v(" "),a("tr",[a("td",[t._v("Date()")]),t._v(" "),a("td",[t._v("返回日期时间的日期部分")])]),t._v(" "),a("tr",[a("td",[t._v("DateDiff()")]),t._v(" "),a("td",[t._v("计算两个日期之差")])]),t._v(" "),a("tr",[a("td",[t._v("Date_Add()")]),t._v(" "),a("td",[t._v("高度灵活的日期运算函数")])]),t._v(" "),a("tr",[a("td",[t._v("Date_Format()")]),t._v(" "),a("td",[t._v("返回一个格式化的日期或时间串")])]),t._v(" "),a("tr",[a("td",[t._v("Year()")]),t._v(" "),a("td",[t._v("返回一个日期的年份部分")])]),t._v(" "),a("tr",[a("td",[t._v("Month()")]),t._v(" "),a("td",[t._v("返回一个日期的月份部分")])]),t._v(" "),a("tr",[a("td",[t._v("Day()")]),t._v(" "),a("td",[t._v("返回一个日期的天数部分")])]),t._v(" "),a("tr",[a("td",[t._v("DayOfWeek()")]),t._v(" "),a("td",[t._v("对于一个日期，返回对应的星期几")])]),t._v(" "),a("tr",[a("td",[t._v("Hour()")]),t._v(" "),a("td",[t._v("返回一个时间的小时部分")])]),t._v(" "),a("tr",[a("td",[t._v("Minute()")]),t._v(" "),a("td",[t._v("返回一个时间的分钟部分")])]),t._v(" "),a("tr",[a("td",[t._v("Second()")]),t._v(" "),a("td",[t._v("返回一个时间的秒部分")])]),t._v(" "),a("tr",[a("td",[t._v("Now()")]),t._v(" "),a("td",[t._v("返回当前日期和时间")])])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 检索出日期为 2005-09-01 这天的订单记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" order_date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2005-09-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 上面的检索有个问题，如果 order_date 存储的带有时间，例如 2005-09-01 11:30:05 ，就检索不到了，解决办法是让仅将给出的日期与列中的日期部分进行比较")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2005-09-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 如果想检索出2005年9月的所有订单")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 方法一，得记住每个月有多少天，甚至要知道是不是闰年的2月")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("BETWEEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2005-09-01'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2005-09-30'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 方法二, 使用 Year() 和 Month() 函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Year")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2005")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Month")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"注意-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-5"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("使用日期过滤，日期必须为 yyyy-mm-dd ,这样能排除一些歧义，年份也应该使用 4 位数字，更加可靠。")])]),t._v(" "),a("h3",{attrs:{id:"数值处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值处理函数"}},[t._v("#")]),t._v(" 数值处理函数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("函 数")]),t._v(" "),a("th",[t._v("说 明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Abs()")]),t._v(" "),a("td",[t._v("返回一个数的绝对值")])]),t._v(" "),a("tr",[a("td",[t._v("Sin()")]),t._v(" "),a("td",[t._v("返回一个角度的正弦")])]),t._v(" "),a("tr",[a("td",[t._v("Cos()")]),t._v(" "),a("td",[t._v("返回一个角度的余弦")])]),t._v(" "),a("tr",[a("td",[t._v("Tan()")]),t._v(" "),a("td",[t._v("返回一个角度的正切")])]),t._v(" "),a("tr",[a("td",[t._v("Exp()")]),t._v(" "),a("td",[t._v("返回一个数的指数值")])]),t._v(" "),a("tr",[a("td",[t._v("Mod()")]),t._v(" "),a("td",[t._v("返回除操作的余数")])]),t._v(" "),a("tr",[a("td",[t._v("Pi()")]),t._v(" "),a("td",[t._v("返回圆周率")])]),t._v(" "),a("tr",[a("td",[t._v("Rand()")]),t._v(" "),a("td",[t._v("返回一个随机数")])]),t._v(" "),a("tr",[a("td",[t._v("Sqrt()")]),t._v(" "),a("td",[t._v("返回一个数的平方根")])])])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"汇总数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#汇总数据"}},[t._v("#")]),t._v(" 汇总数据")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("函 数")]),t._v(" "),a("th",[t._v("说 明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("AVG()")]),t._v(" "),a("td",[t._v("返回某列的平均值")])]),t._v(" "),a("tr",[a("td",[t._v("COUNT()")]),t._v(" "),a("td",[t._v("返回某列的行数")])]),t._v(" "),a("tr",[a("td",[t._v("MAX()")]),t._v(" "),a("td",[t._v("返回某列的最大值")])]),t._v(" "),a("tr",[a("td",[t._v("MIN()")]),t._v(" "),a("td",[t._v("返回某列的最小值")])]),t._v(" "),a("tr",[a("td",[t._v("SUM()")]),t._v(" "),a("td",[t._v("返回某列值之和")])])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 计算出 products 表中所有产品的平均价格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" avg_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" avg_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.133571")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 查看 customers 表中所有客户的总数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" num_cust "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" num_cust "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 只对具有电子邮件地址的客户计数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cust_email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" num_cust "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" num_cust "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 计算出订单号为 20005 的物品总数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quantity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" items_ordered "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orderitems "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20005")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" items_ordered "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 多个聚集函数组合")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" num_items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" price_min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" price_max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" price_avg "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+-----------+-----------+-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" num_items "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" price_min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" price_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" price_avg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+-----------+-----------+-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.50")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.133571")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+-----------+-----------+-----------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"参数-all-和-distinct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数-all-和-distinct"}},[t._v("#")]),t._v(" 参数 ALL 和 DISTINCT")]),t._v(" "),a("p",[t._v("使用 DISTINCT 参数时，只会计算包含不同的值的行，如果指定参数为 ALL 或者不指定参数，默认参数为 ALL ，会计算所有的行。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 看一下产品表里有多少家供应商，因为有可能一家供应商提供很多产品。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 全部的行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" vend_count "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" vend_count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 去重后就知道有 4 家供应商")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" vend_count "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" vend_count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-6"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("AVG() 只能用来确定 "),a("strong",[t._v("单个")]),t._v(" 特定数值列的平均值，而且列名必须作为函数参数传入，想获取多个列的平均值，必须使用多个 AVG() 函数。")]),t._v(" "),a("li",[t._v("AVG() 函数忽略列值为 NULL 的行。")]),t._v(" "),a("li",[t._v("COUNT(*) 对表中行的数目进行计数， 不管列中是空值（NULL）还是非空值。")]),t._v(" "),a("li",[t._v("使用 COUNT(column) 对特定列中具有值的行进行计数，会忽略 NULL 值。")]),t._v(" "),a("li",[t._v("MAX() 函数会忽略值为 NULL 的行（MIN()也是）。它一般是用来找出最大的数值和日期值，但是也可以对非数值的数据使用，例如返回文本列中的最大值，MAX() 会返回最后一行（MIN\n() 会返回第一行）。")]),t._v(" "),a("li",[t._v("SUM() 函数会忽略值为 NULL 的行")]),t._v(" "),a("li",[t._v("在表示某个聚集函数的结果时，不应该使用表中实际的列明，最好是指定别名，这样便于理解和使用。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"分组数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组数据"}},[t._v("#")]),t._v(" 分组数据")]),t._v(" "),a("h3",{attrs:{id:"数据分组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据分组"}},[t._v("#")]),t._v(" 数据分组")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("GROUP BY 子句后面可以加多个列。")]),t._v(" "),a("li",[t._v("SELECT 子句中的列名必须为分组列或列函数（聚集计算语句除外），例如 按照 vend_id, prod_price 分组，SELECT 后面检索的列必须是 vend_id, prod_price。")]),t._v(" "),a("li",[t._v("列函数对于 GROUP BY 子句定义的每个组各返回一个结果，例如取最大值时，就是每个组的最大值。")]),t._v(" "),a("li",[t._v("如果分组列中有 NULL 值，则 NULL 将作为一个分组返回，如果列中有多行 NULL 值，它们将分为一组。")]),t._v(" "),a("li",[t._v("GROUP BY 子句必须在 WHERE 子句之后， ORDER BY 子句之前。")])]),t._v(" "),a("h3",{attrs:{id:"过滤分组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤分组"}},[t._v("#")]),t._v(" 过滤分组")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 列出至少有两个订单的所有顾客")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" cust_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 列出具有2个（含）以上、价格为10（含）以上的产品的供应商")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" num_prods "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 列出总计订单价格大于等于50的订单，并按照总价排序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" order_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quantity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("item_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" ordertotal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orderitems "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("quantity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("item_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" ordertotal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ordertotal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20006")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20008")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("125.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20005")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("149.87")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20007")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+------------+")]),t._v("\n")])])]),a("ul",[a("li",[t._v("HAVING 跟 WHERE 类似，但是 WHERE 在数据分组前进行过滤，HAVING 在数据分组后进行过滤。")])]),t._v(" "),a("h3",{attrs:{id:"select-子句顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select-子句顺序"}},[t._v("#")]),t._v(" SELECT 子句顺序")]),t._v(" "),a("p",[t._v("SELECT > FROM > WHERE > GROUP BY > HAVING > ORDER BY > LIMIT")]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"使用子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用子查询"}},[t._v("#")]),t._v(" 使用子查询")]),t._v(" "),a("p",[t._v("假设要列出订购物品 TNT2 的所有客户。我们可以拆分出下面三步。")]),t._v(" "),a("ol",[a("li",[t._v("检索包含物品 TNT2 的所有订单的编号。")]),t._v(" "),a("li",[t._v("检索具有前一步骤列出的订单编号的所有客户的 ID。")]),t._v(" "),a("li",[t._v("检索前一步骤返回的所有客户 ID 的客户信息。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_contact "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orderitems "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TNT2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_name      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_contact "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Yosemite Place "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Sam        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+")]),t._v("\n")])])]),a("p",[t._v("假设需要显示 customers 表中每个客户的订单总数，我们可以查分出下面两步。")]),t._v(" "),a("ol",[a("li",[t._v("从 customers 表中检索客户列表。")]),t._v(" "),a("li",[t._v("对于检索出的每个客户，统计其在 orders 表中的订单数目。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_contact"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+--------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_name      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_contact "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+--------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" E Fudd         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" E Fudd       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Mouse House    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Jerry Mouse  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Wascals        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Jim Jones    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Yosemite Place "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Sam        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+--------+")]),t._v("\n")])])]),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"联结表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联结表"}},[t._v("#")]),t._v(" 联结表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 等值联结（equi join），它基于两个表之间的相等测试。这种联结也称为 内部联结。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" vendors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vendors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vend_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" vend_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 内部联结的语法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" vendors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" vendors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vend_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" vend_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 上面提到用子查询，返回订购产品 TNT 的客户列表，现在改成联结表的方式，可以跟子查询的方式对比一下。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_contact "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orderitems "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" orderitems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TNT2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-7"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("应该保证所有的联结都有 WHERE 子句，否则 MySQL 将返回比想要的数据多得多的数据。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"创建高级联结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建高级联结"}},[t._v("#")]),t._v(" 创建高级联结")]),t._v(" "),a("h3",{attrs:{id:"表别名和自联结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表别名和自联结"}},[t._v("#")]),t._v(" 表别名和自联结")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 使用表别名，返回订购产品 TNT 的客户列表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_contact "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orderitems "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" oi "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TNT2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 使用自联结，查找商品 ID 为 DTNTR 的供应商供应的所有产品")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prod_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" p2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DTNTR'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"外部联结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外部联结"}},[t._v("#")]),t._v(" 外部联结")]),t._v(" "),a("p",[t._v("联结包含了那些在相关表中没有关联行的行，外部联结的两种基本形式：左外部联结(LEFT OUTER JOIN 即 LEFT JOIN)和右外部联结。它们之间唯一差别是所关联的表的顺序不同。更具体可以看一下 "),a("a",{attrs:{href:"https://segmentfault.com/a/1190000015572505",target:"_blank",rel:"noopener noreferrer"}},[t._v("JOIN 详解"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 列出每个客户下的订单，包括那些至今未下订单的客户")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20005")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20009")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10002")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10003")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20006")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10004")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20007")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10005")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20008")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+-----------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#### 对每个用户下的订单计数，包括那些至今没下订单的客户")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" order_count "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+---------+-------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_name      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" order_count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+---------+-------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10001")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Mouse House    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10002")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Wascals        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10003")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Yosemite Place "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10004")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" E Fudd         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10005")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+---------+-------------+")]),t._v("\n")])])]),a("hr"),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"组合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合查询"}},[t._v("#")]),t._v(" 组合查询")]),t._v(" "),a("p",[t._v("MySQL 允许执行多个查询（多条 SELECT 语句），并将结果作为单个查询结果集返回。这些组合查询称为并（union） 或 复合查询（compound query）。")]),t._v(" "),a("p",[t._v("有两种基本情况，其中需要使用组合查询：")]),t._v(" "),a("ul",[a("li",[t._v("在单个查询中从不同的表返回类似结构的数据；")]),t._v(" "),a("li",[t._v("对单个表执行多个查询，按单个查询返回数据。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 查询价格小于等于5的所有物品并且查出供应商 1001 和 1002 生产的所有物品（不考虑价格）")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 先用 WHERE 多个子句来实现。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 使用组合查询实现，会自动去除重复的行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 使用组合查询查所有符合条件的列")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 组合查询排序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" vend_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-8"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("UNION 必须由两条或两条以上的 SELECT 语句组成，语句之间用关键字 UNION 分隔。")]),t._v(" "),a("li",[t._v("UNION 中的每个查询必须包含相同的列，表达式或聚集函数（不过各个列不需要以相同的次序列出）。")]),t._v(" "),a("li",[t._v("对组合查询结果排序时，只能使用一条 ORDER BY 子句，它必须出现在最后一条 SELECT 语句之后。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"全文本搜索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全文本搜索"}},[t._v("#")]),t._v(" 全文本搜索")]),t._v(" "),a("p",[t._v("并非所有引擎都支持全文本搜索，例如 MyISAM 支持全文本搜索，InnoDB 不支持。")]),t._v(" "),a("p",[t._v("在创建表时启用全文本搜索， CREATE TABLE 语句接受 FULLTEXT 子句，它可以对后面的一个或多个表建立索引，MySQL 自动维护该索引，在增加、更新或删除行时，索引随之自动更新。FULLTEXT 也可以在表创建之后再指定。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 看一下 productnotes 表的创建描述")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("productnotes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("note_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("prod_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("note_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("datetime")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("note_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("note_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  FULLTEXT "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("note_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("note_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("MyISAM "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("115")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8mb4 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLLATE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8mb4_0900_ai_ci\n\n")])])]),a("p",[t._v("创建索引后就可以用 Match() 和 Against() 执行全文本搜索，其中 Match() 指定被搜索的列， Against() 指定要使用的搜索表达式。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 搜索出 node_text 中包含 rabbit 的。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 先用 LIKE 实现")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" note_text "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" productnotes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" note_text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%rabbit%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Quantity varies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" …… "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" rabbit bait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Customer complaint: rabbit has …… "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------------------------------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 使用文本搜索实现，可以看到 rabbit 排在第三个词的文本比排在第20个词的文本排序高。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" note_text "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" productnotes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("note_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Against"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rabbit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Customer complaint: rabbit has …… "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Quantity varies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" …… "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" rabbit bait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------------------------------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 可以使用下面的语句查看排序的等级")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" note_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("note_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Against"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rabbit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" rank1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" productnotes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 除了查出来的两个有数据，其他的等级都是0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Customer complaint: rabbit has …… "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 的等级是 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.6408053636550903")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Quantity varies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" …… "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" rabbit bait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 的等级是 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5905543565750122")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 使用查询扩展 WITH QUERY EXPANSION ，找出所有提到 anvils 的注释，还要找出与当前搜索有关的所有其他行，即使它们不包含 anvils")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" note_text "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" productnotes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("note_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Against"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'anvils'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" QUERY EXPANSION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 会返回7行，但是只有第一行有 anvils ,第二行虽然与 anvils 无关，但因为它包含了第一行的两个词，所以也被检索出来。")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"注意-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-9"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("传递给 Match() 的值必须与 FULLTEXT() 定义中的相同。如果指定多个列，必须列出他们，而且次序正确。")]),t._v(" "),a("li",[t._v("经过比较可以发现，文本搜索是默认带有排序的，LIKE 搜索出来的结果是随意的，按照查询的先后输出。")]),t._v(" "),a("li",[t._v("文本搜索的等级根据行中词的数目，唯一词的数目，整个索引中词的总数，以及包含该词的行的书目计算出来。")]),t._v(" "),a("li",[t._v("在索引全文本数据时，短词被忽略且从索引中排除。短词的定义时那些具有 3 个或 3 个一下字符的词（如果需要，这个数目可以改）")]),t._v(" "),a("li",[t._v("许多词出现的频率很高，搜索他们没用，MySQL 规定了一条 50% 规则，如果一个词出现 50%以上的行中，则将它作为一个非用词忽略。50%规则不用于 IN BOOLEAN MODE。")]),t._v(" "),a("li",[t._v("如果表中的行数少于 3 行，则全文本搜索不返回结果")]),t._v(" "),a("li",[t._v("忽略词中的单引号。例如，don't 索引为 dont")]),t._v(" "),a("li",[t._v("不具有词分隔符（包括日语和汉语）的语言不能恰当地返回全文本搜索结果")])]),t._v(" "),a("h3",{attrs:{id:"布尔文本查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔文本查询"}},[t._v("#")]),t._v(" 布尔文本查询")]),t._v(" "),a("p",[t._v("IN BOOLEAN MODE，即使没有 FULLTEXT 索引，也可以使用")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 匹配包含 heavy 但不包含任意以 rope 开始的词的行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" note_text "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" productnotes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("note_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Against"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'heavy -rope*'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BOOLEAN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 匹配词 safe 和 combination, 降低后者的等级。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" note_text "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" productnotes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("note_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Against"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+safe +(<combination)'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BOOLEAN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("全文本布尔操作符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("布尔操作符")]),t._v(" "),a("th",[t._v("说 明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[t._v("包含，词必须存在")])]),t._v(" "),a("tr",[a("td",[t._v("-")]),t._v(" "),a("td",[t._v("排除，词必须不出现")])]),t._v(" "),a("tr",[a("td",[t._v(">")]),t._v(" "),a("td",[t._v("包含，而且增加等级值")])]),t._v(" "),a("tr",[a("td",[t._v("<")]),t._v(" "),a("td",[t._v("包含，且减少等级值")])]),t._v(" "),a("tr",[a("td",[t._v("()")]),t._v(" "),a("td",[t._v("把词组成子表达式（允许这些子表达式作为一个组被包含、排除、 排列等）")])]),t._v(" "),a("tr",[a("td",[t._v("~")]),t._v(" "),a("td",[t._v("取消一个词的排序值")])]),t._v(" "),a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("词尾的通配符")])]),t._v(" "),a("tr",[a("td",[t._v('""')]),t._v(" "),a("td",[t._v("定义一个短语（与单个词的列表不一样，它匹配整个短语以便包含或排除这个短语）")])])])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"插入数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[t._v("#")]),t._v(" 插入数据")]),t._v(" "),a("h3",{attrs:{id:"插入完整的行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入完整的行"}},[t._v("#")]),t._v(" 插入完整的行")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 如下的语句中，对每个列必须提供一个值，如果某个列没有值，应该使用 NULL 值（假设表允许对该列指定空值）。每个列必须按照顺序给出，自动增量的值也不能忽略，而且如果不想赋值，就需要指定为 NULL 。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Pep E. LaPew'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100 Main Street'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Los Angeles'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'90046'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面的语法应该避免使用，因为不安全，建议用下面的语句,可以不按照次序填充，只要保证 VALUES 中的次序跟前面给出的列名次序一致就行。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_contact"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_zip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Pep E. LaPew'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100 Main Street'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Los ANGELES'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'90046'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"插入多个行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入多个行"}},[t._v("#")]),t._v(" 插入多个行")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 可以使用多条 INSERT 语句，甚至一次提交它们，每条语句用一个分号结束。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_zip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Pep E. LaPew'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100 Main Street'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Los Angeles'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'90046'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_zip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'M. Martian'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'42 Galaxy Way'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'New York'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NY'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11213'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 或者每条 INSERT 语句中的列名（和次序）相同，可以如下组合语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_zip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cust_country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Pep E. LaPew'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100 Main Street'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Los Angeles'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'90046'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'M. Martian'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'42 Galaxy Way'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'New York'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NY'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11213'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-10"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("在 INSERT 操作中可以省略某些列，省略的列必须满足：该列定义为允许 NULL 值（无值或者空值），或在表定义中给出默认值，这表示如果不给出值，将使用默认值，否则插入时省略会报错。")]),t._v(" "),a("li",[t._v("可以使用 INSERT LOW PRIORITY INTO 来降低插入语句的优先级。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"更新数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新数据"}},[t._v("#")]),t._v(" 更新数据")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 更新id是10009客户名字的邮箱。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" cust_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The Fudds'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'elmer@fudd.com'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10009")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 为了删除某个列的值，可设置它为 NULL（假定表定义为允许 NULL 值）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" cust_email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10009")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-11"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("使用 UPDATE 时，一定不能省略 WHERE 子句，否则就会更新表中的所有行。")]),t._v(" "),a("li",[t._v("UPDATE 操作如果报错，则整个 UPDATE 操作被取消，错误发生前更新的所有行被恢复到它们原来的值，如果想发生错误的时候也继续进行更新，可以使用 IGNORE 关键字 "),a("code",[t._v("UPDATE IGNORE customers")])])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"删除数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除数据"}},[t._v("#")]),t._v(" 删除数据")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 删除10011这一行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10011")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"注意-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-12"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("使用 DELETE 时，一定不能省略 WHERE 子句，否则就会删除表中的所有行。即使删除所有行， DELETE 也不会删除表本身。")]),t._v(" "),a("li",[t._v("如果想从表中删除所有行，不要使用 DELETE。可以使用 TRUNCATE TABLE 语句，速度更快（TRUNCATE 实际是删除原来的表并重新创建一个表，而不是逐行删除表中的数据）。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"创建和操纵表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建和操纵表"}},[t._v("#")]),t._v(" 创建和操纵表")]),t._v(" "),a("h3",{attrs:{id:"创建表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建表"}},[t._v("#")]),t._v(" 创建表")]),t._v(" "),a("p",[t._v("利用 CREATE TABLE 创建表，必须紧跟着给出新表的名字，然后是表列的名字和定义，用逗号分隔。")]),t._v(" "),a("h4",{attrs:{id:"null-值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-值"}},[t._v("#")]),t._v(" NULL 值")]),t._v(" "),a("p",[t._v("NULL 值就是没有值或缺值。允许 NULL 值的列也允许在插入行时不给出该列的值。 NOT NULL 即不允许 NULL 值的列不接受该列没有值的行，在插入或更新行时，该列必须有值。NULL 是默认设置，如果不指定 NOT NULL，则认为指定的是 NULL。")]),t._v(" "),a("h4",{attrs:{id:"主键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主键"}},[t._v("#")]),t._v(" 主键")]),t._v(" "),a("p",[t._v("主键必须是唯一的，即表中的每个行必须具有唯一的主键值，如果主键使用单个列，则它的值必须唯一。如果使用多个列，则这些列的组合值必须唯一。")]),t._v(" "),a("p",[t._v("使用类似 PRIMARY KEY (id) 的语句来定义。为创建由多个列组成的主键，应该以逗号分隔的列表给出各列名，例如 orderitems 表的创建用到的 PRIMARY KEY (order_num, order_item)")]),t._v(" "),a("p",[t._v("主键可以在创建表时定义，或者在创建表之后定义。")]),t._v(" "),a("p",[t._v("主键为唯一标识表中每个行的列，主键中只能使用不允许 NULL 值的列。")]),t._v(" "),a("h4",{attrs:{id:"auto-increment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auto-increment"}},[t._v("#")]),t._v(" AUTO_INCREMENT")]),t._v(" "),a("p",[t._v("每次执行一个 INSERT 操作时， MySQL 自动对该列增量。")]),t._v(" "),a("p",[t._v("每个表只能允许一个 AUTO_INCREMENT 列，而且它必须被索引（比如通过使用它成为主键）")]),t._v(" "),a("p",[t._v("在执行 INSERT 时可以给 AUTO_INCREMENT 指定一个值，只要它是至今为止唯一的就行，该值将被用来替代自动生成的值。后续的增量将开始使用该手工插入的值。")]),t._v(" "),a("p",[t._v("last_insert_id() 这个函数能返回最后一个 AUTO_INCREMENT 值")]),t._v(" "),a("h4",{attrs:{id:"指定默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定默认值"}},[t._v("#")]),t._v(" 指定默认值")]),t._v(" "),a("p",[t._v("列定义中的 DEFAULT 关键字指定。 MySQL 跟大多数 DBMS 一样， 不允许使用函数作为默认值，它只支持常量。")]),t._v(" "),a("h4",{attrs:{id:"引擎类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引擎类型"}},[t._v("#")]),t._v(" 引擎类型")]),t._v(" "),a("p",[t._v("大多数时候， CREATE TABLE 语句全都以 ENGINE=InnoDB 语句结束。MySQL 具有多种引擎，这些打包的多个引擎都隐藏在 MySQL 的服务器内，全都能执行 CREATE TABLE 和 SELECT 等命令。这些引擎具有各自不同的功能和特性，为不同的任务选择正确的引擎能获得良好的功能和灵活性。")]),t._v(" "),a("p",[a("strong",[t._v("InnoDB")]),t._v(" 是一个可靠的事务处理引擎，它不支持全文本搜索。")]),t._v(" "),a("p",[a("strong",[t._v("MyISAM")]),t._v(" 是一个性能极高的引擎，它支持全文本搜索，但不支持事务处理")]),t._v(" "),a("p",[a("strong",[t._v("MEMORY")]),t._v(" 在功能等同于 MyISAM，但由于数据存储在内存（不是磁盘）中，速度很快（特别适合用于临时表）")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("########################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 看一下 customers 表的创建")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("########################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" customers\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  cust_id      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cust_name    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cust_address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cust_city    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cust_state   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cust_zip     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cust_country "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cust_contact "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cust_email   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"更新表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新表"}},[t._v("#")]),t._v(" 更新表")]),t._v(" "),a("p",[t._v("为了更新表定义，可使用 ALTER TABLE 语句。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### vendors 表中增加 vend_phone 列")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" vendors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" vend_phone "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 删除刚刚增加的 vend_phone 列")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" vendors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLUMN")]),t._v(" vend_phone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### ALTER TABLE 常见的用途就是定义外键")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" fk_products_vendors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" vendors "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vend_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"删除表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除表"}},[t._v("#")]),t._v(" 删除表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" customers2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"重命名表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重命名表"}},[t._v("#")]),t._v(" 重命名表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 重命名一个表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RENAME")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" customers2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 重命名多个表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RENAME")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" backup_customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("backup_vendors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" vendors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-13"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("创建新表时，指定的表名必须不存在，否则将出错。如果仅想在一个表不存在时创建它，应该在表名后面给出 IF NOT EXISTS。")]),t._v(" "),a("li",[t._v("使用 ALTER TABLE 要极为小心，应该在进行改动之前做一个完整的备份（模式和数据的备份）")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"使用视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用视图"}},[t._v("#")]),t._v(" 使用视图")]),t._v(" "),a("p",[t._v("视图仅仅是用来查看存储在别处的数据的一种设施，本身不包含数据，返回的数据都是从其他表中检索出来的，视图能更改数据格式和表示，最常见的应用就是重用 SQL 语句，简化复杂的 SQL 操作。")]),t._v(" "),a("h3",{attrs:{id:"操作视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作视图"}},[t._v("#")]),t._v(" 操作视图")]),t._v(" "),a("p",[t._v("CREATE VIEW 创建视图")]),t._v(" "),a("p",[t._v("SHOW CREATE VIEW viewname 查看创建视图的语句")]),t._v(" "),a("p",[t._v("DROP VIEW viewname 删除视图")]),t._v(" "),a("p",[t._v("更新视图时，可以先 DROP 然后再 CREATE 或者使用 CREATE OR REPLACE VIEW")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 之前有用联表查询 prod_id 是 TNT2的购买用户信息，但是如果还想看 prod_id 是其他值的时，还得重新查一遍，这样的场景就能用到视图了。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 创建一个包含 cust_name, cust_contact, prod_id 的视图")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VIEW")]),t._v(" productcustomers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_contact"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orderitems "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" orderitems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 现在就能看到 productcustomers 视图能查询的信息了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" productcustomers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+---------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_name      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_contact "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+---------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV01   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV02   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TNT2    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" FB      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" FB      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" OL1     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SLING   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ANV03   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Wascals        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Jim Jones    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JP2000  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Yosemite Place "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Sam        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TNT2    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" E Fudd         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" E Fudd       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" FC      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+---------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 如果想再查询出 prod_id 为 TNT2 的客户信息就很简单了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_contact "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" productcustomers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TNT2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_name      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cust_contact "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Coyote Inc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Lee        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Yosemite Place "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Y Sam        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------+--------------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-14"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("视图必须唯一命名（不能跟别的视图和表重名）")]),t._v(" "),a("li",[t._v("对于可以创建的视图数量没有限制。")]),t._v(" "),a("li",[t._v("视图可以嵌套，即可以利用从其他视图中检索数据的查询来构造一个新的视图。")]),t._v(" "),a("li",[t._v("ORDER BY 可以用在视图中，但如果从该视图检索数据的 SELECT 中也含有 ORDER BY ，那么视图中的 ORDER BY 会被覆盖。")]),t._v(" "),a("li",[t._v("视图不能索引，也不能有关联的触发器或默认值。")]),t._v(" "),a("li",[t._v("视图可以和表一起使用。")]),t._v(" "),a("li",[t._v("视图一般用于检索（SELECT）而不用于更新（INSERT, UPDATE, DELETE），因为更新一个视图相当于更新其基表，如果不能正确地确定被更新的基数据，则不允许更新。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"使用存储过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用存储过程"}},[t._v("#")]),t._v(" 使用存储过程")]),t._v(" "),a("p",[t._v("使用存储过程主要有三个好处，简单，安全，高性能。")]),t._v(" "),a("p",[t._v("MySQL 称存储过程的执行为调用，因此 MySQL 执行存储过程的语句为 CALL。CALL 接受存储过程的名字以及需要传递给它的任意参数。")]),t._v(" "),a("h3",{attrs:{id:"简单例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单例子"}},[t._v("#")]),t._v(" 简单例子")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 创建名为 productpricing 的存储过程 如果存储过程接受参数，它们将在 productpricing () 这个括号中列举出来。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" productpricing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" priceaverage "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 调用存储过程，仿佛在调用函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CALL")]),t._v(" productpricing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" priceaverage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.133571")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------+")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 删除存储过程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" productpricing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 检查存储过程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" productpricing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"有参数的例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有参数的例子"}},[t._v("#")]),t._v(" 有参数的例子")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 创建存储过程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" productpricing "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUT")]),t._v(" pl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECIMAL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUT")]),t._v(" ph "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECIMAL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUT")]),t._v(" pa "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECIMAL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" pl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" ph "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prod_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" pa "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 调用存储过程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CALL")]),t._v(" productpricing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pricelow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pricehigh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@priceaverage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 查看3个变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pricelow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pricehigh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@priceaverage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+------------+---------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pricelow")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pricehigh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@priceaverage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+------------+---------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.50")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.13")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+------------+---------------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"建立智能存储过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建立智能存储过程"}},[t._v("#")]),t._v(" 建立智能存储过程")]),t._v(" "),a("p",[t._v("需要获取订单合计，并且对某些顾客的合计增加营业税。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 存储过程全过程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Name: ordertotal")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Parameters: onumber = order number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--             taxable = 0 if not taxable, 1 if taxable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--             ototal = order total variable")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" ordertotal "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" onumber "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" taxable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BOOLEAN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUT")]),t._v(" ototal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECIMAL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Obtain order total, optionally adding tax'")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Declare variable for total")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" total "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECIMAL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Declare tax percentage")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" taxrate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Get the order total")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item_price"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("quantity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orderitems "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" onumber "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Is this taxable")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" taxable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Yes, so add taxrate to the total")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" total"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("total"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("taxrate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- And finally, save to out variable")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" total "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" ototal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 调用，看一下 order number 是 20005 订单关于加不加营业税的区别")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 不加营业税")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CALL")]),t._v(" ordertotal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20005")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@total")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@total")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@total")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("149.87")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------+")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 加营业税")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CALL")]),t._v(" ordertotal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20005")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@total")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@total")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@total")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("158.86")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------+")]),t._v("\n")])])]),a("p",[t._v("上面代码中做些必要的解释")]),t._v(" "),a("ul",[a("li",[t._v("添加了两个 IN 类型参数，其中 taxable 为布尔值。")]),t._v(" "),a("li",[a("code",[t._v("--")]),t._v(" 添加注释，在存储过程复杂是，注释很有必要。")]),t._v(" "),a("li",[a("code",[t._v("DECLARE")]),t._v(" 定义局部变量，需要指定变量名和数据类型，支持可选的默认值")]),t._v(" "),a("li",[a("code",[t._v("COMMENT")]),t._v(" 关键字，不是必需的，如果添加了，在 SHOW PROCEDURE STATUS 的结果中显示。")])]),t._v(" "),a("h3",{attrs:{id:"注意-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-15"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("如果在 mysql 命令行中创建存储过程的话，需要临时更改命令行实用程序的语句分隔符，因为创建存储过程会使用 ; 作为语句分隔符，这会导致语法报错。除了 \\ 符号外，任何字符都可以用作语句分隔符。 可以使用 DELIMITER // 作为新的语句结束分隔符，但是创建完存储过程后，要记得用 DELIMITER ; 恢复为原来的语句分隔符。")]),t._v(" "),a("li",[t._v("存储过程在创建之后，被保存在服务器上以供使用，直至被删除。")]),t._v(" "),a("li",[t._v("如果删除不存在的存储过程时，会报错，可以使用 DROP PROCEDURE IF EXISTS ,只有当过程存在时才删除。")]),t._v(" "),a("li",[t._v("MySQL 支持 IN（传递给存储过程）、OUT（从存储过程传出）、INOUT（对存储过程传入和传出）三种类型的参数。SELECT 检索出来的值通过 INTO 保存到相应的变量。特别注意，参数的数据类型不能是一个集合，所以例子中才用了三个参数输出 3 个数。")]),t._v(" "),a("li",[t._v("如果存储过程要求 3 个参数，就必须正好传递 3 个参数。")]),t._v(" "),a("li",[a("code",[t._v("SHOW PROCEDURE STATUS")]),t._v(" 可以列出所有存储过程，也可以使用 LIKE 指定一个过滤模式： "),a("code",[t._v("SHOW PROCEDURE STATUS LIKE 'ordertotal';")])])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"使用游标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用游标"}},[t._v("#")]),t._v(" 使用游标")]),t._v(" "),a("p",[t._v("游标（cursor）是一个存储在 MySQL 服务器上的数据库查询，它不是一条 SELECT 语句，而是被该语句检索出来的结果集。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" processorders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" done "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BOOLEAN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECIMAL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" ordernumbers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CURSOR")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONTINUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HANDLER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" SQLSTATE "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'02000'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" done "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" ordertotals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order_num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" total "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECIMAL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OPEN")]),t._v(" ordernumbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPEAT")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FETCH")]),t._v(" ordernumbers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CALL")]),t._v(" ordertotal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" ordertotals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UNTIL done "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPEAT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CLOSE")]),t._v(" ordernumbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ordertotals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+---------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" order_num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" total   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+---------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20005")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("158.86")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20009")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40.78")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20006")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("58.30")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20007")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1060.00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20008")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("132.50")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20008")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("132.50")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------+---------+")]),t._v("\n")])])]),a("p",[a("code",[t._v("DECLARE")]),t._v(" 命名游标，并定义相应的 SELECT 语句，根据需要带 WHERE 和其他子句。")]),t._v(" "),a("p",[a("code",[t._v("OPEN ordernumbers;")]),t._v(" 打开 ordernumbers 游标，在处理 OPEN 语句时执行查询，存储检索出的数据以供浏览和滚动。")]),t._v(" "),a("p",[a("code",[t._v("CLOSE ordernumbers;")]),t._v(" 关闭 ordernumbers 游标，CLOSE 释放游标使用的所有内部内存和资源，因此在每个游标不再需要时都应该关闭，如果没有明确关闭游标，MySQL 将会在到达 END 语句时自动关闭它。在一个游标关闭后，如果没有重新打开，就不能使用它。但是，使用声明过的游标不需要再次声明，用 OPEN 语句打开就行。")]),t._v(" "),a("p",[a("code",[t._v("FETCH")]),t._v(" 指定检索什么数据，检索出来的数据存储在什么地方。它还向前移动游标中的内部行指针，使下一条 FETCH 语句检索下一行。")]),t._v(" "),a("p",[a("code",[t._v("CONTINUE HANDLER")]),t._v(" 是在条件出现时被执行的代码。上面 "),a("code",[t._v("SQLSTATE '02000'")]),t._v(" 出现时 "),a("code",[t._v("SET done = 1")]),t._v("。"),a("code",[t._v("SQLSTATE '02000'")]),t._v("是一个未找到条件，上面指的是 REPEAT 由于没有更多的行供循环而不能继续时，出现这个条件。")]),t._v(" "),a("h3",{attrs:{id:"注意-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-16"}},[t._v("#")]),t._v(" 注意：")]),t._v(" "),a("ul",[a("li",[t._v("跟其他的 DBMS 不同的是，MySQL 游标只能用于存储过程（和函数）")]),t._v(" "),a("li",[t._v("在使用游标前，必须声明（定义）游标。声明的过程实际上没有检索数据，它只是定义要使用的 SELECT 语句。")]),t._v(" "),a("li",[t._v("声明之后，如果要使用游标，必须打开游标。这个过程是用前面定义的 SELECT 语句把数据实际检索出来。")]),t._v(" "),a("li",[t._v("在结束游标使用时，必须关闭游标。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"使用触发器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用触发器"}},[t._v("#")]),t._v(" 使用触发器")]),t._v(" "),a("p",[t._v("触发器是 MySQL 响应以下任意语句而自动执行的一条 MySQL 语句，（或位于 BEGIN 和 END 语句之间的一组语句）:")]),t._v(" "),a("ul",[a("li",[t._v("DELETE;")]),t._v(" "),a("li",[t._v("INSERT;")]),t._v(" "),a("li",[t._v("UPDATE;")])]),t._v(" "),a("h3",{attrs:{id:"创建触发器遵循以下几点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建触发器遵循以下几点"}},[t._v("#")]),t._v(" 创建触发器遵循以下几点")]),t._v(" "),a("ul",[a("li",[t._v("唯一的触发器名；")]),t._v(" "),a("li",[t._v("触发器关联的表；")]),t._v(" "),a("li",[t._v("触发器应该响应的活动（DELETE、INSERT 和 UPDATE）；")]),t._v(" "),a("li",[t._v("触发器何时执行（处理之前或之后）")])]),t._v(" "),a("p",[a("code",[t._v("CREATE TRIGGER")]),t._v(" 新建触发器")]),t._v(" "),a("p",[a("code",[t._v("DROP TRIGGER")]),t._v(" 删除触发器")]),t._v(" "),a("h3",{attrs:{id:"insert-触发器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#insert-触发器"}},[t._v("#")]),t._v(" INSERT 触发器")]),t._v(" "),a("ul",[a("li",[t._v("在 INSERT 触发器代码内，可以引用一个名为 NEW 的虚拟表，访问被插入的行；")]),t._v(" "),a("li",[t._v("在 BEFORE INSERT 触发器中，NEW 中的值可以被更新（允许更改被插入的值）")]),t._v(" "),a("li",[t._v("对于 AUTO_INCREMENT 列， NEW 在 INSERT 执行之前包含 0，在 INSERT 执行之后包含新的自动生成值。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 创建一个名为 neworder 的触发器，在插入一个新订单到 orders 表时，返回新的订单号放到变量@number中。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRIGGER")]),t._v(" neworder "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AFTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR EACH ROW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" NEW"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20010")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"delete-触发器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delete-触发器"}},[t._v("#")]),t._v(" DELETE 触发器")]),t._v(" "),a("ul",[a("li",[t._v("在 DELETE 触发器代码内，可以引用一个名为 OLD 的虚拟表，访问被删除的行；")]),t._v(" "),a("li",[t._v("OLD 中的值是只读的，不能更新。")])]),t._v(" "),a("h3",{attrs:{id:"update-触发器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-触发器"}},[t._v("#")]),t._v(" UPDATE 触发器")]),t._v(" "),a("ul",[a("li",[t._v("在 UPDATE 触发器代码内，可以引用一个名为 OLD 的虚拟表，访问以前（UPDATE 语句前）的值，引用一个名为 NEW 的虚拟表访问新更新的值；")]),t._v(" "),a("li",[t._v("在 BEFORE UPDATE 触发器中，NEW 中的值可以被更新（允许更改将要用于 UPDATE 语句中的值）")]),t._v(" "),a("li",[t._v("OLD 中的值是只读的，不能更新。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 创建一个名为 neworder 的触发器，在插入一个新订单到 orders 表时，返回新的订单号放到变量@number中。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRIGGER")]),t._v(" neworder "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AFTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR EACH ROW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" NEW"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20010")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------+")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"注意-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-17"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("只有表才支持触发器，视图不支持（临时表也不支持）。")]),t._v(" "),a("li",[t._v("触发器按每个表每个事件每次地定义，每个表每个事件每次只允许一个触发器。因此，每个表最多支持 6 个触发器（每条 INSERT、UPDATE 和 DELETE 的之前和之后）")]),t._v(" "),a("li",[t._v("单一触发器不能与多个事件或多个表关联，所以，如果需要一个对 INSERT 和 UPDATE 操作执行的触发器，就应该定义两个触发器。")]),t._v(" "),a("li",[t._v("如果 BEFORE 触发器失败，MySQL 将不执行请求的操作。如果 BEFORE 触发器或语句本身失败， MySQL 将不执行 AFTER 触发器（如果有的话）。")]),t._v(" "),a("li",[t._v("MySQL 的 TRIGGER 和 FUNCTION 中不能出现 SELECT * FROM table 形式的查询，因为其会返回一个结果集，而这在 MySQL 的 TRIGGER 和 FUNCTION 中是不可接受的，但是在存储过程中可以。在 TRIGGER 和 FUNCTION 中可以使用 SELECT ... INTO ... 形式的查询。")]),t._v(" "),a("li",[t._v("使用 TRIGGER 的时候没有 INTO 的时候会报这样一种错误 "),a("code",[t._v("not allowed to return a result set from a trigger")])]),t._v(" "),a("li",[t._v("MySQL 触发器中不支持 CALL 语句，这表示不能从触发器内调用存储过程。所需的存储过程代码需要复制到触发器内。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"管理事务处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管理事务处理"}},[t._v("#")]),t._v(" 管理事务处理")]),t._v(" "),a("p",[t._v("事务处理（transaction processing）可以用来维护数据库的完整性，它保证成批的 MySQL 操作要么完全执行，要么完全不执行。")]),t._v(" "),a("p",[t._v("事务处理是一种机制，用来管理必须成批执行的 MySQL 操作，以保证数据库不包含不完整的操作结果。使用事务处理，可以保证一组操作不会中途停止，它们要么整体执行，要么完全不执行（除非明确指示）如果没有错误发生，整租语句提交给（写到）数据库表。如果发生错误，则进行回退（撤销）以恢复数据库到某个已知且安全的状态。")]),t._v(" "),a("ul",[a("li",[t._v("事务（transaction）指一组 SQL 语句，语句 "),a("code",[t._v("START TRANSACTION")])]),t._v(" "),a("li",[t._v("回退（rollback） 指撤销指定的 SQL 语句的过程，语句 "),a("code",[t._v("ROLLBACK TO onename")])]),t._v(" "),a("li",[t._v("提交（commit） 指将未存储的 SQL 语句结果写入数据库表，语句 "),a("code",[t._v("COMMIT")]),t._v(" "),a("ul",[a("li",[t._v("一般的 MySQL 语句都是直接针对数据库表执行和编写的，提交（写或保存）操作是自动进行的，这就是所谓的隐含提交（implicit commit）")]),t._v(" "),a("li",[t._v("在事务处理中，提交不会隐含地进行，为了进行明确的提交，使用 COMMIT 语句")])])]),t._v(" "),a("li",[t._v("保留点（savepoint） 指事务处理中设置的临时占位符（place-holder）,你可以对它发布回退（与回退整个事务处理不同）。为了支持回退部分事务处理，必须能在事务处理块中合适的位置放置保留点，这样，如果需要回退，可以回退到某个占位符，即某个保留点。语句： "),a("code",[t._v("SAVEPOINT onename")])])]),t._v(" "),a("p",[t._v("假设一个场景：系统添加订单的过程")]),t._v(" "),a("ol",[a("li",[t._v("检查数据库中是否存在相应的客户（从 customers 表查询），如果不存在，添加 TA。")]),t._v(" "),a("li",[t._v("检索客户的 ID")]),t._v(" "),a("li",[t._v("添加一行到 orders 表，把它与客户 ID 关联")]),t._v(" "),a("li",[t._v("检索 orders 表中赋予的新订单的 ID")]),t._v(" "),a("li",[t._v("对于订购的每个物品在 orderitems 表中添加一行，通过检索出来的 ID 把它与 orders 表关联（以及通过产品 ID 与 products 表关联）")])]),t._v(" "),a("p",[t._v("现在假如由于某种数据库故障（如超出磁盘空间、安全限制、表锁等）阻止了这个过程的完成，如果发生在添加客户之后，orders 表添加之前还好，但是如果故障发生在 orders 行添加之后，orderitems 行添加之前，那么数据库中就会有一个空订单，如果发生在添加 orderitems 行中出现的故障，那数据库就可能有不完整的订单，而且这个不完整的订单还不会被发现。")]),t._v(" "),a("p",[t._v("所以我们要把过程改一下：")]),t._v(" "),a("ol",[a("li",[t._v("检查数据库中是否存在相应的客户（从 customers 表查询），如果不存在，添加 TA。")]),t._v(" "),a("li",[a("strong",[t._v("提交")]),t._v("客户信息")]),t._v(" "),a("li",[t._v("检索客户的 ID")]),t._v(" "),a("li",[t._v("添加一行到 orders 表")]),t._v(" "),a("li",[t._v("如果在添加行到 orders 表时出现故障，"),a("strong",[t._v("回退")])]),t._v(" "),a("li",[t._v("检索 orders 表中赋予的新订单 ID")]),t._v(" "),a("li",[t._v("对于订购的每项商品，添加新行到 orderitems 表")]),t._v(" "),a("li",[t._v("如果在添加新行到 orderitems 表时出现故障，"),a("strong",[t._v("回退")]),t._v("所有添加的 orderitems 行和 orders 行")]),t._v(" "),a("li",[t._v("提交订单信息")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n")])])]),a("h3",{attrs:{id:"注意-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-18"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("当 COMMIT 和 ROLLBACK 语句执行后，事务会自动关闭（将来的更改会隐含提交）")]),t._v(" "),a("li",[t._v("每个保留点都要取一个唯一的名字，以便回退时，MySQL 知道要回退到何处。保留点尽量越多越好，这样就可以更灵活的回退。保留点在事务处理完成（执行一条 ROLLBACK 或 COMMIT）后自动释放。也可以使用 RELEASE SAVEPOINT 明确地释放保留点。")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"数据库维护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库维护"}},[t._v("#")]),t._v(" 数据库维护")]),t._v(" "),a("h3",{attrs:{id:"备份数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#备份数据"}},[t._v("#")]),t._v(" 备份数据")]),t._v(" "),a("h4",{attrs:{id:"mysqldump"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysqldump"}},[t._v("#")]),t._v(" mysqldump")]),t._v(" "),a("p",[t._v("mysqldump 是一个逻辑备份工具，复制原始的数据库对象定义和表数据产生一组可执行的 SQL 语句。在日常工作中，我们会使用 mysqldump 命令创建 SQL 格式的转存储文件来备份数据库，或者把数据导出后做数据迁移，主备搭建等操作。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --user、-u 指定连接的用户名，--password、-p 连接数据库密码，--port、-P 连接数据库端口号")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --all-databases 会导出包括系统数据库在内的所有数据库")]),t._v("\nmysqldump "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("proot "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--all-databases > /tmp/all.sql")]),t._v("\nmysqldump "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--all-databases > /tmp/all.sql # 需要回车后输入密码")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --add-drop-database 在导出的备份文件中，在 CREATE DATABASE 语句前加上 DROP DATABASE 语句")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --add-drop-table 在导出的备份文件中，在 CREATE TABLE 语句前加上 DROP TABLE 语句")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --databases 导出database1、database2两个数据库的所有数据")]),t._v("\nmysqldump "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--user root --password=root --databases database1 database2 > /tmp/user.sql")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --tables 导出database1中的table1、table2表")]),t._v("\nmysqldump "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("proot "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--databases database1 --tables table1 table2  > /tmp/database1.sql")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --routines、-R 导出目标数据库里的触发器和函数")]),t._v("\nmysqldump  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("proot "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--host=localhost --all-databases --routines")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --where、-w 只导出符合WHERE条件的记录。如果条件包含命令解释符专用空格或字符，一定要将条件引用起来，单引号和双引号都可以")]),t._v("\nmysqldump "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("proot "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--databases database1 --tables table1 --where='id=1'  > /tmp/table1.sql")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --no-data、-d 不导出任何数据，只导出数据库表结构")]),t._v("\nmysqldump "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("proot "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--no-data --databases database1 >/tmp/database1.sql")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --no-create-info、-t 只导出数据，导出的sql中不包含drop table,create table")]),t._v("\nmysqldump "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("proot "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--no-create-info --databases database1 --tables table1 --where=\"id='a'\"  >/tmp/table1.sql")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --host、-h 需要导出的主机信息，跨服务器导出导入数据")]),t._v("\nmysqldump "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--host=h1 -uroot -proot --databases database1 |mysql --host=h2 -uroot -proot database2")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"注意-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-19"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("导出指定表只能针对一个数据库进行导出，且导出的内容中和导出数据库也不一样，导出指定表的导出文本中没有创建数据库的判断语句，只有删除表-创建表-导入数据")])]),t._v(" "),a("hr"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),a("h3",{attrs:{id:"一些注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些注意点"}},[t._v("#")]),t._v(" 一些注意点")]),t._v(" "),a("h4",{attrs:{id:"_1、多条-sql-语句必须以分号-分隔。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、多条-sql-语句必须以分号-分隔。"}},[t._v("#")]),t._v(" 1、多条 SQL 语句必须以分号（;）分隔。")]),t._v(" "),a("h4",{attrs:{id:"_2、sql-语句不区分大小写-因此-例如-select-和-select-是相同的-即使写成-select-都是没有问题的。大家约定俗成的把-sql-关键词大写-其他的列和表名用小写-这样做使代码更易于阅读和调试。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、sql-语句不区分大小写-因此-例如-select-和-select-是相同的-即使写成-select-都是没有问题的。大家约定俗成的把-sql-关键词大写-其他的列和表名用小写-这样做使代码更易于阅读和调试。"}},[t._v("#")]),t._v(" 2、SQL 语句不区分大小写，因此，例如 SELECT 和 select 是相同的，即使写成 SelEct 都是没有问题的。大家约定俗成的把 SQL 关键词大写，其他的列和表名用小写，这样做使代码更易于阅读和调试。")]),t._v(" "),a("h4",{attrs:{id:"_3、在处理-sql-语句时-其中所有空格都会被忽略。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、在处理-sql-语句时-其中所有空格都会被忽略。"}},[t._v("#")]),t._v(" 3、在处理 SQL 语句时，其中所有空格都会被忽略。")]),t._v(" "),a("h3",{attrs:{id:"其他指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他指令"}},[t._v("#")]),t._v(" 其他指令")]),t._v(" "),a("h3",{attrs:{id:"查看当前-mysql-版本或者当前在哪个数据库中。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看当前-mysql-版本或者当前在哪个数据库中。"}},[t._v("#")]),t._v(" 查看当前 MySQL 版本或者当前在哪个数据库中。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 登录之前，查看版本")]),t._v("\nmysql "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("V\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 登录之后使用MySQL的函数（大小写均可）查看版本")]),t._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" VERSION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 登录之后，使用 status 或者 \\s 查看版本和当前使用的数据库")]),t._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("status")]),t._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \\s\n")])])]),a("h3",{attrs:{id:"查看当前-mysql-的密码策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看当前-mysql-的密码策略"}},[t._v("#")]),t._v(" 查看当前 MySQL 的密码策略")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" VARIABLES "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'validate_password%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------------------------------+--------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Variable_name                        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Value")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------------------------------+--------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" validate_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("check_user_name    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" validate_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dictionary_file    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" validate_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" validate_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mixed_case_count   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" validate_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("number_count       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" validate_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("policy             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" MEDIUM "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" validate_password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("special_char_count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--------------------------------------+--------+")]),t._v("\n")])])]),a("p",[t._v("要注意 "),a("code",[t._v("validate_password_policy：密码强度检查等级")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("级别")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("0/LOW")]),t._v(" "),a("td",[t._v("只检查长度。")])]),t._v(" "),a("tr",[a("td",[t._v("1/MEDIUM")]),t._v(" "),a("td",[t._v("检查长度、数字、大小写、特殊字符。")])]),t._v(" "),a("tr",[a("td",[t._v("2/STRONG")]),t._v(" "),a("td",[t._v("检查长度、数字、大小写、特殊字符字典文件")])])])]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://raydoom.github.io/work/mysql/2018/09/13/mysql-validate-password/",target:"_blank",rel:"noopener noreferrer"}},[t._v("详见 mysql 密码策略设置"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"http://blog.itpub.net/20893244/viewspace-2565368/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL8.0 SHOW VARIABLES 为 empty set 可看此文"),a("OutboundLink")],1)])])]),t._v(" "),a("h3",{attrs:{id:"其他的-show-命令列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他的-show-命令列表"}},[t._v("#")]),t._v(" 其他的 SHOW 命令列表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于显示广泛的服务器状态信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("STATUS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示创建特定数据库的MySQL语句，例如展示 learnsql 数据库的创建语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATABASE")]),t._v(" learnsql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示创建特定表的MySQL语句，例如展示 customers 表的创建语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示服务器的错误信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ERRORS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示服务器的警告信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WARNINGS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有允许的 SHOW 语句")]),t._v("\nHELP "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);