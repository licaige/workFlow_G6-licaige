user  nginx;
#nginx 进程数，建议按照cpu 数目来指定，一般为它的倍数。
worker_processes  2;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
	#单个后台worker process进程的最大并发链接数  
    worker_connections  1024;
}

http {
	#设定mime类型,类型由mime.type文件定义
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    #引入其他conf文件
    include       /etc/nginx/conf.d/*.conf;

    #设定日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    #开启gzip压缩
    gzip  on;
    gzip_static on;    
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied  any;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    #设定请求缓冲
    client_header_buffer_size    128k;
    large_client_header_buffers  4 128k;
	
	#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，
	#对于普通应用，必须设为 on,
    #如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，
    #以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile on;
	
	#用于设置客户端连接保持活动的超时时间，在超过这个时间之后服务器会关闭该链接。
    #keepalive_timeout  0;
    keepalive_timeout  120; 
	
	#允许客户端请求的最大单文件字节数
	client_max_body_size 50m;
	
	#服务器名字的hash表大小
	server_names_hash_bucket_size 128;
	#header中自定义变量时支持下划线
	underscores_in_headers on; 
	
	#down 表示当前的server暂时不参与负载
	#weight 加权轮询权重,默认为1。weight越大，负载的权重就越大。
	#backup 备用服务器, 当其他所有的非backup机器出现故障或者忙的时候，才会请求backup机器，因此这台机器的压力最轻。
	#max_fails 允许请求失败的次数默认为1。当超过最大次数时，返回proxy_next_upstream 模块定义的错误
	#fail_timeout max_fails次失败后，暂停的时间。
	#apiServer不能用下划线,否则访问不到
	upstream apiServer {
      server 172.17.0.1:18081 weight=10;
      server 172.17.0.1:28081 weight=10;
    }
  
  # 主应用
    server {
        listen       2750;
        server_name  127.0.0.1;

        #charset koi8-r;
        #access_log  logs/host.access.log  main;

        location / {
            root   /usr/local/future/web/master;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;

            # 普通模块接口地址
            location ^~ /nginx/ {
                proxy_pass http://127.0.0.1:3700/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                #由于服务器端源码(建议大家做好大小写匹配)只匹配了"Upgrade"字符串,所以如果这里填"upgrade"服务器端会将这条http请求当成普通的请求,导致websocket握手失败
                proxy_set_header Connection "Upgrade";
                proxy_set_header Remote_addr $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_read_timeout 600s;
            }
            
        }

        error_page    502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/future/web/master;
        }
    }
  
    # login
    server {
        listen       2753;
        server_name  localhost;

        add_header   Access-Control-Allow-Origin *;
        add_header   Access-Control-Allow-Methods 'GET,POST';
        add_header   Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization'; 

        location / {
            root   /usr/local/mfe/web/subapp-login;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/mfe/web/master;
        }
    }
    # blog
    server {
        listen       2752;
        server_name  localhost;

        add_header   Access-Control-Allow-Origin *;
        add_header   Access-Control-Allow-Methods 'GET,POST';
        add_header   Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization'; 

        location / {
            root   /usr/local/mfe/web/subapp-blog;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/mfe/web/master;
        }
    }
    # ui
    server {
        listen       2751;
        server_name  localhost;

        add_header   Access-Control-Allow-Origin *;
        add_header   Access-Control-Allow-Methods 'GET,POST';
        add_header   Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization'; 

        location / {
            root   /usr/local/mfe/web/subapp-ui;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/mfe/web/master;
        }
    }
}
