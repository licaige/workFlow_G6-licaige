//201. 数字范围按位与

// 给你两个整数 left 和 right ，表示区间 [left, right] ，返回此区间内所有数字 按位与 的结果（包含 left 、right 端点）。

// 输入：left = 5, right = 7
// 输出：4



//     公共    后缀
// 0 = 0000  0 000
// 1 = 0000  0 001
// 2 = 0000  0 010
// 3 = 0000  0 011
// 4 = 0000  0 100
// 5 = 0000  0 101
// 6 = 0000  0 110
// 7 = 0000  0 111      (x)
// 8 = 0000  1 000      (x+1)
// 9 = 0000  1 001
// ----------------
// x = 0000  x 000

// 按位与性值   如果某个位置为0, 则该位都是0
// 将0-9转换为二进制 一定是  公共前缀+后缀
// 由于0-9递增,那么后缀的第一位  前面一定都是0  后面都是1

// 一定存在连续的两个数x和x+1，满足
// x的第i+1位为0，后面全为1，
//! x+1的第i+1位为1，后面全为 000

// 那么前i+1 位按位与一定是0
// i+1位之后 按位与也一定是0

// 比如 上图


//todo 所以题目可以转换为  给定两个整数(0和9)，我们要找到它们对应的二进制字符串的公共前缀。
// 也就是找到第i+1位   结果为  100000.... (i个零)

var rangeBitwiseAnd = function (left, right) {

    let shift = 0
    // 找到公共前缀
    // 比如9和12
    // 9 = 00001 001
    // 12= 00001 100
    // 持续压缩得 此时left = right
    // 00001
    // 00001
    // 压缩了三位 shift = 3
    // 结果即为  1 000
    while (left < right) {
        left >>= 1;  // 二进制右移一位   比如 m=10000 (16)   执行后  m = 01000 (8)
        right >>= 1;
        ++shift;
    }

    return left << shift
};

console.log(rangeBitwiseAnd(5, 7));